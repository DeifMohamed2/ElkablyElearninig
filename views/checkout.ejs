<%- include('partials/header', { title: title }) %>

<!-- Import Checkout CSS -->
<link rel="stylesheet" href="/css/checkout.css">

<!-- Checkout Page -->
<div class="checkout-page" style=" margin-top: 80px;">
  <div class="checkout-container">
    <!-- Breadcrumb -->
    <nav class="checkout-breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item active">Checkout</li>
      </ol>
    </nav>

    <!-- Main Content -->
    <div class="checkout-content">
      <!-- Checkout Form -->
      <div class="checkout-form-card">
        <div class="checkout-form-header">
          <h2 class="checkout-form-title">
            <i class="fas fa-credit-card"></i>
            Checkout
          </h2>
          <p class="checkout-form-subtitle">
            Complete your purchase and start learning today!
          </p>
        </div>

        <form id="checkoutForm" class="checkout-form">
          <!-- Billing Information -->
          <div class="checkout-form-section">
            <h3 class="checkout-section-title">
              <i class="fas fa-user"></i>
              Billing Information
            </h3>

            <div class="row">
              <div class="col-md-6">
                <div class="checkout-form-group">
                  <label for="firstName" class="checkout-form-label">First Name *</label>
                  <input type="text" id="firstName" name="firstName" class="checkout-form-control" value="<%= user.firstName %>" required>
                </div>
              </div>
              <div class="col-md-6">
                <div class="checkout-form-group">
                  <label for="lastName" class="checkout-form-label">Last Name *</label>
                  <input type="text" id="lastName" name="lastName" class="checkout-form-control" value="<%= user.lastName %>" required>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6">
                <div class="checkout-form-group">
                  <label for="email" class="checkout-form-label">Email Address *</label>
                  <input type="email" id="email" name="email" class="checkout-form-control" value="<%= user.studentEmail %>" required>
                </div>
              </div>
              <div class="col-md-6">
                <div class="checkout-form-group">
                  <label for="phone" class="checkout-form-label">Phone Number *</label>
                  <input type="tel" id="phone" name="phone" class="checkout-form-control" value="<%= user.parentCountryCode %><%= user.parentNumber %>" required>
                </div>
              </div>
            </div>

            <div class="checkout-form-group">
              <label for="address" class="checkout-form-label">Address *</label>
              <input type="text" id="address" name="address" class="checkout-form-control" placeholder="Street address" required>
            </div>

            <div class="row">
              <div class="col-md-6">
                <div class="checkout-form-group">
                  <label for="city" class="checkout-form-label">City *</label>
                  <input type="text" id="city" name="city" class="checkout-form-control" required>
                </div>
              </div>
              <div class="col-md-6">
                <div class="checkout-form-group">
                  <label for="state" class="checkout-form-label">Area *</label>
                  <input type="text" id="state" name="state" class="checkout-form-control" required>
                </div>
              </div>
              <div class="col-md-1">
                <div class="checkout-form-group d-none">
                  <label for="zipCode" class="checkout-form-label">ZIP/Postal Code *</label>
                  <input type="text" id="zipCode" name="zipCode" class="checkout-form-control" value="11311" required>
                </div>
              </div>
            </div>

            <div class="checkout-form-group">
              <label for="country" class="checkout-form-label">Country *</label>
              <select id="country" name="country" class="checkout-form-control" required>
                <option value="">Select Country</option>
                <option value="Saudi Arabia">Saudi Arabia</option>
                <option value="Egypt">Egypt</option>
                <option value="UAE">United Arab Emirates</option>
                <option value="Kuwait">Kuwait</option>
                <option value="USA">United States</option>
                <option value="UK">United Kingdom</option>
                <option value="Canada">Canada</option>
              </select>
            </div>
          </div>

          <!-- Payment Method -->
          <div class="checkout-form-section">
            <h3 class="checkout-section-title">
              <i class="fas fa-credit-card"></i>
              Payment Method
            </h3>

            <div class="checkout-payment-methods">
              <div class="checkout-payment-option">
                <input type="radio" id="creditCard" name="selectedPaymentMethod" value="card" checked>
                <label for="creditCard" class="checkout-payment-label">
                  <div class="checkout-payment-icon">
                    <i class="fas fa-credit-card"></i>
                  </div>
                  <div class="checkout-payment-info">
                    <span class="checkout-payment-name">Credit/Debit Card</span>
                    <span class="checkout-payment-desc">Visa, Mastercard via Paymob</span>
                  </div>
                </label>
              </div>

              <div class="checkout-payment-option disabled">
                <input type="radio" id="mobileWallet" name="selectedPaymentMethod" value="wallet" disabled>
                <label for="mobileWallet" class="checkout-payment-label disabled">
                  <div class="checkout-payment-icon">
                    <i class="fas fa-mobile-alt"></i>
                  </div>
                  <div class="checkout-payment-info">
                    <span class="checkout-payment-name">Mobile Wallet</span>
                    <span class="checkout-payment-desc">Vodafone Cash, Orange Money via Paymob</span>
                    <span class="checkout-payment-coming-soon">Available Soon</span>
                  </div>
                </label>
              </div>

              <div class="checkout-payment-option apple-pay disabled">
                <input type="radio" id="applePay" name="selectedPaymentMethod" value="apple_pay" disabled>
                <label for="applePay" class="checkout-payment-label apple-pay-label disabled">
                  <div class="checkout-payment-icon apple-pay-icon">
                    <i class="fab fa-apple-pay"></i>
                  </div>
                  <div class="checkout-payment-info">
                    <span class="checkout-payment-name">Apple Pay</span>
                    <span class="checkout-payment-desc">Pay securely with Face ID, Touch ID, or passcode</span>
                    <span class="checkout-payment-coming-soon">Available Soon</span>
                  </div>
                </label>
              </div>
            </div>

            <div class="paymob-security-notice">
              <i class="fas fa-shield-alt"></i>
              <span>Payments are processed securely through Paymob Payment Gateway</span>
            </div>
          </div>

          <!-- Promo Code Section -->
          <div class="checkout-form-section">
            <h3 class="checkout-section-title">
              <i class="fas fa-tag"></i>
              Promo Code
            </h3>

            <div class="promo-code-container">
              <div class="promo-code-input-group">
                <input type="text" id="promoCodeInput" class="checkout-form-control" placeholder="Enter promo code" maxlength="20">
                <button type="button" id="applyPromoBtn" class="promo-apply-btn">
                  <i class="fas fa-check"></i>
                  Apply
                </button>
              </div>
              <div id="promoCodeMessage" class="promo-code-message" style="display: none;"></div>
            </div>

            <div id="appliedPromoCode" class="applied-promo-code" style="display: none;">
              <div class="applied-promo-info">
                <i class="fas fa-tag"></i>
                <span class="promo-code-text"></span>
                <span class="promo-discount-amount"></span>
                <button type="button" id="removePromoBtn" class="promo-remove-btn">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            </div>
          </div>

          <!-- Order Summary -->
          <div class="checkout-form-section">
            <h3 class="checkout-section-title">
              <i class="fas fa-shopping-bag"></i>
              Order Summary
            </h3>

            <div class="checkout-order-items">
              <% cart.forEach(item => { %>
              <div class="checkout-order-item">
                <div class="checkout-order-item-media">
                  <img src="<%= item.image %>" alt="<%= item.title %>">
                  <div class="checkout-order-item-badge">
                    <i class="fas fa-<%= item.type === 'bundle' ? 'box' : 'book' %>"></i>
                  </div>
                </div>
                <div class="checkout-order-item-details">
                  <h4 class="checkout-order-item-title"><%= item.title %></h4>
                  <span class="checkout-order-item-type"><%= item.type === 'bundle' ? 'Course Bundle' : 'Individual Course' %></span>
                </div>
                <div class="checkout-order-item-price">
                  <% if (item.discountPrice && item.discountPrice > 0) { %>
                  <span class="checkout-original-price">EGP <%= item.originalPrice.toFixed(2) %></span>
                  <span class="checkout-discount-badge">-<%= item.discountPrice.toFixed(0) %>%</span>
                  <br>
                  <span class="checkout-final-price">EGP <%= item.price.toFixed(2) %></span>
                  <% } else { %>
                  EGP <%= item.price.toFixed(2) %>
                  <% } %>
                </div>
              </div>
              <% }); %>
            </div>
          </div>

          <!-- Submit Button -->
          <div class="checkout-form-actions">
            <button type="submit" class="checkout-btn-process" id="processPaymentBtn">
              <i class="fas fa-lock"></i>
              <span class="checkout-btn-text">Process Payment</span>
              <div class="checkout-btn-loading" style="display: none;">
                <i class="fas fa-spinner fa-spin"></i>
              </div>
            </button>
          </div>
        </form>
      </div>

      <!-- Checkout Summary -->
      <div class="checkout-summary-card">
        <div class="checkout-summary-header">
          <h3 class="checkout-summary-title">
            <i class="fas fa-shopping-bag"></i>
            Order Summary
          </h3>
        </div>

        <div class="checkout-summary-content">
          <div class="checkout-summary-row">
            <span class="checkout-summary-label">Subtotal:</span>
            <span class="checkout-summary-value" id="subtotalValue">EGP <%= subtotal.toFixed(2) %></span>
          </div>
          <div id="promoCodeDiscountRow" class="checkout-summary-row" style="display: none;">
            <span class="checkout-summary-label">Promo Code Discount:</span>
            <span class="checkout-summary-value promo-discount" id="promoDiscountValue">-EGP 0.00</span>
          </div>
          <div class="checkout-summary-row">
            <span class="checkout-summary-label">Tax:</span>
            <span class="checkout-summary-value">EGP <%= tax.toFixed(2) %></span>
          </div>
          <div class="checkout-summary-row checkout-summary-total">
            <span class="checkout-summary-label">Total:</span>
            <span class="checkout-summary-value" id="totalValue">EGP <%= total.toFixed(2) %></span>
          </div>
        </div>

        <div class="checkout-summary-guarantees">
          <div class="checkout-guarantee-item">
            <i class="fas fa-lock"></i>
            <span>Secure Payment Processing</span>
          </div>
          <div class="checkout-guarantee-item">
            <i class="fas fa-headset"></i>
            <span>24/7 Customer Support</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const checkoutForm = document.getElementById('checkoutForm');
    const processPaymentBtn = document.getElementById('processPaymentBtn');
    
    // Promo code elements
    const promoCodeInput = document.getElementById('promoCodeInput');
    const applyPromoBtn = document.getElementById('applyPromoBtn');
    const removePromoBtn = document.getElementById('removePromoBtn');
    const promoCodeMessage = document.getElementById('promoCodeMessage');
    const appliedPromoCode = document.getElementById('appliedPromoCode');
    const promoCodeDiscountRow = document.getElementById('promoCodeDiscountRow');
    const promoDiscountValue = document.getElementById('promoDiscountValue');
    const totalValue = document.getElementById('totalValue');
    
    // Original totals
    const originalSubtotal = <%= subtotal %>;
    const originalTotal = <%= total %>;
    
    // Promo code functionality
    applyPromoBtn.addEventListener('click', applyPromoCode);
    removePromoBtn.addEventListener('click', removePromoCode);
    
    // Allow Enter key to apply promo code
    promoCodeInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        applyPromoCode();
      }
    });
    
    async function applyPromoCode() {
      const promoCode = promoCodeInput.value.trim().toUpperCase();
      
      if (!promoCode) {
        showPromoMessage('Please enter a promo code', 'error');
        return;
      }
      
      applyPromoBtn.disabled = true;
      applyPromoBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Applying...';
      
      try {
        const response = await fetch('/purchase/promo-code/validate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ promoCode })
        });
        
        const data = await response.json();
        
        if (data.success) {
          showPromoMessage(`Promo code "${data.promoCode}" applied successfully!`, 'success');
          updateOrderSummary(data.originalAmount, data.discountAmount, data.finalAmount, data.promoCode);
          showAppliedPromoCode(data.promoCode, data.discountAmount);
          promoCodeInput.value = '';
        } else {
          showPromoMessage(data.message, 'error');
        }
      } catch (error) {
        console.error('Error applying promo code:', error);
        showPromoMessage('Error applying promo code. Please try again.', 'error');
      } finally {
        applyPromoBtn.disabled = false;
        applyPromoBtn.innerHTML = '<i class="fas fa-check"></i> Apply';
      }
    }
    
    async function removePromoCode() {
      try {
        const response = await fetch('/purchase/promo-code/remove', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        });
        
        const data = await response.json();
        
        if (data.success) {
          showPromoMessage('Promo code removed successfully', 'info');
          resetOrderSummary();
          hideAppliedPromoCode();
        } else {
          showPromoMessage(data.message, 'error');
        }
      } catch (error) {
        console.error('Error removing promo code:', error);
        showPromoMessage('Error removing promo code. Please try again.', 'error');
      }
    }
    
    function showPromoMessage(message, type) {
      promoCodeMessage.textContent = message;
      promoCodeMessage.className = `promo-code-message ${type}`;
      promoCodeMessage.style.display = 'block';
      
      setTimeout(() => {
        promoCodeMessage.style.display = 'none';
      }, 5000);
    }
    
    function updateOrderSummary(originalAmount, discountAmount, finalAmount, promoCode) {
      // SECURITY: Use server-calculated amounts only
      promoDiscountValue.textContent = `-EGP ${discountAmount.toFixed(2)}`;
      totalValue.textContent = `EGP ${finalAmount.toFixed(2)}`;
      promoCodeDiscountRow.style.display = 'flex';
      
      // Update the subtotal display to show original amount
      const subtotalValue = document.getElementById('subtotalValue');
      if (subtotalValue) {
        subtotalValue.textContent = `EGP ${originalAmount.toFixed(2)}`;
      }
    }
    
    function resetOrderSummary() {
      totalValue.textContent = `EGP ${originalTotal.toFixed(2)}`;
      promoCodeDiscountRow.style.display = 'none';
    }
    
    function showAppliedPromoCode(promoCode, discountAmount) {
      const promoCodeText = appliedPromoCode.querySelector('.promo-code-text');
      const promoDiscountAmount = appliedPromoCode.querySelector('.promo-discount-amount');
      
      promoCodeText.textContent = promoCode;
      promoDiscountAmount.textContent = `-EGP ${discountAmount.toFixed(2)}`;
      appliedPromoCode.style.display = 'block';
    }
    
    function hideAppliedPromoCode() {
      appliedPromoCode.style.display = 'none';
    }

    checkoutForm.addEventListener('submit', async function(e) {
      e.preventDefault();

      // SECURITY: Validate that frontend amounts match server expectations
      const currentTotal = parseFloat(totalValue.textContent.replace('EGP ', ''));
      const originalTotalAmount = <%= total %>;
      
      // If promo code is applied, ensure the total is less than original
      const hasAppliedPromo = document.getElementById('appliedPromoCode').style.display !== 'none';
      if (hasAppliedPromo && currentTotal >= originalTotalAmount) {
        showNotification('Invalid order total. Please refresh the page and try again.', 'error');
        return;
      }

      // Show loading state
      processPaymentBtn.disabled = true;
      processPaymentBtn.classList.add('loading');
      processPaymentBtn.querySelector('.checkout-btn-text').textContent = 'Creating Payment Session...';
      processPaymentBtn.querySelector('.checkout-btn-loading').style.display = 'inline-block';

      try {
        // Collect form data
        const formData = new FormData(checkoutForm);
        const billingAddress = {
          firstName: formData.get('firstName'),
          lastName: formData.get('lastName'),
          email: formData.get('email'),
          phone: formData.get('phone'),
          address: formData.get('address'),
          city: formData.get('city'),
          state: formData.get('state'),
          zipCode: formData.get('zipCode'),
          country: formData.get('country')
        };

        const selectedPaymentMethod = formData.get('selectedPaymentMethod');

        // Process payment - server will handle promo code validation and amounts
        const response = await fetch('/purchase/checkout/process', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            paymentMethod: 'paymob',
            selectedPaymentMethod,
            billingAddress
            // Note: Promo code is handled server-side from session
          })
        });

        const data = await response.json();

        if (data.success && data.paymentData && data.paymentData.iframeUrl) {
          showNotification('Redirecting to payment gateway...', 'success');

          // SECURITY: Verify that the payment total matches our expected total
          const expectedTotal = hasAppliedPromo ? currentTotal : originalTotalAmount;
          if (Math.abs(data.paymentData.total - expectedTotal) > 0.01) {
            console.warn('Payment total mismatch:', {
              expected: expectedTotal,
              received: data.paymentData.total
            });
            showNotification('Payment amount mismatch detected. Please refresh and try again.', 'error');
            return;
          }

          // Show payment iframe
          showPaymentIframe(data.paymentData);
        } else {
          showNotification(data.message || 'Failed to create payment session', 'error');
        }
      } catch (error) {
        console.error('Error:', error);
        showNotification('Error processing payment. Please try again.', 'error');
      } finally {
        // Reset button state
        processPaymentBtn.disabled = false;
        processPaymentBtn.classList.remove('loading');
        processPaymentBtn.querySelector('.checkout-btn-text').textContent = 'Process Payment';
        processPaymentBtn.querySelector('.checkout-btn-loading').style.display = 'none';
      }
    });
  });

  // Show Paymob payment iframe
  function showPaymentIframe(paymentData) {
    // Create modal overlay
    const modal = document.createElement('div');
    modal.className = 'payment-iframe-modal';
    modal.innerHTML = `
    <div class="payment-iframe-container">
      <div class="payment-iframe-header">
        <h3>
          <i class="fas fa-credit-card"></i>
          Complete Your Payment
        </h3>
        <button class="payment-iframe-close" onclick="closePaymentIframe()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="payment-iframe-body">
        <div class="payment-info">
          <div class="payment-info-item">
            <span class="label">Order Number:</span>
            <span class="value">${paymentData.orderNumber}</span>
          </div>
          <div class="payment-info-item">
            <span class="label">Total Amount:</span>
            <span class="value">EGP ${paymentData.total.toFixed(2)}</span>
          </div>
        </div>
        <iframe 
          src="${paymentData.iframeUrl}"
          class="payment-iframe"
          frameborder="0"
          allowfullscreen>
        </iframe>
      </div>
    </div>
  `;

    document.body.appendChild(modal);
    document.body.style.overflow = 'hidden';

    // Add event listener for iframe messages (payment completion)
    window.addEventListener('message', handlePaymentMessage);

    // Show modal with animation
    setTimeout(() => modal.classList.add('show'), 100);
  }

  // Handle payment completion messages from iframe
  function handlePaymentMessage(event) {
    // Check if message is from Paymob
    if (event.origin.includes('paymob.com') || event.origin.includes('accept.paymob.com')) {
      const data = event.data;

      // Handle different message types
      if (data.type === 'payment_completed' || data.success === true) {
        // Payment successful
        showNotification('Payment completed successfully! Redirecting...', 'success');

        setTimeout(() => {
          window.location.href = `/purchase/payment/success?merchantOrderId=${data.merchantOrderId || ''}`;
        }, 2000);
      } else if (data.type === 'payment_failed' || data.success === false) {
        // Payment failed
        showNotification('Payment failed. Please try again.', 'error');
        closePaymentIframe();
      }
    }
  }

  // Close payment iframe
  function closePaymentIframe() {
    const modal = document.querySelector('.payment-iframe-modal');
    if (modal) {
      modal.classList.remove('show');
      setTimeout(() => {
        modal.remove();
        document.body.style.overflow = 'auto';
        window.removeEventListener('message', handlePaymentMessage);
      }, 300);
    }
  }

  // Show notification
  function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `checkout-notification checkout-notification-${type}`;
    notification.innerHTML = `
    <div class="checkout-notification-content">
      <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
      <span>${message}</span>
    </div>
  `;

    document.body.appendChild(notification);

    setTimeout(() => notification.classList.add('show'), 100);

    setTimeout(() => {
      notification.classList.remove('show');
      setTimeout(() => notification.remove(), 300);
    }, 5000);
  }

  // Show order summary directly on checkout page
  function showOrderSummary(purchaseData) {
    // Hide the checkout form
    const checkoutForm = document.getElementById('checkoutForm');
    const checkoutSummary = document.querySelector('.checkout-summary-card');

    if (checkoutForm) checkoutForm.style.display = 'none';
    if (checkoutSummary) checkoutSummary.style.display = 'none';

    // Create order summary section
    const orderSummaryHTML = `
    <div class="checkout-order-summary-success">
      <!-- Success Header -->
      <div class="checkout-success-header">
        <div class="checkout-success-icon">
          <i class="fas fa-check-circle"></i>
        </div>
        <h1 class="checkout-success-title">Payment Successful!</h1>
        <p class="checkout-success-message">
          Thank you for your purchase. Your order has been processed successfully and you now have access to your courses.
        </p>
      </div>

      <!-- Order Details -->
      <div class="checkout-order-details">
        <div class="checkout-order-info">
          <h2 class="checkout-order-info-title">
            <i class="fas fa-receipt"></i>
            Order Details
          </h2>
          
          <div class="checkout-order-meta">
            <div class="checkout-meta-item">
              <span class="checkout-meta-label">Order Number:</span>
              <span class="checkout-meta-value">${purchaseData.orderNumber}</span>
            </div>
            <div class="checkout-meta-item">
              <span class="checkout-meta-label">Order Date:</span>
              <span class="checkout-meta-value">${new Date().toLocaleDateString()}</span>
            </div>
            <div class="checkout-meta-item">
              <span class="checkout-meta-label">Payment Status:</span>
              <span class="checkout-meta-value checkout-status-completed">
                <i class="fas fa-check-circle"></i>
                Completed
              </span>
            </div>
            <div class="checkout-meta-item">
              <span class="checkout-meta-label">Payment Method:</span>
              <span class="checkout-meta-value">
                <i class="fas fa-${purchaseData.paymentMethod === 'mobile_wallet' ? 'mobile-alt' : 'credit-card'}"></i>
                ${purchaseData.paymentMethod === 'mobile_wallet' ? 'Mobile Wallet' : 'Credit/Debit Card'}
              </span>
            </div>
          </div>
        </div>

        <!-- Purchased Items -->
        <div class="checkout-purchased-items">
          <h3 class="checkout-items-title">
            <i class="fas fa-shopping-bag"></i>
            Purchased Items
          </h3>
          
          <div class="checkout-items-list">
            ${purchaseData.items.map(item => `
            <div class="checkout-purchased-item">
              <div class="checkout-item-media">
                <img src="${item.image || '/images/adad.png'}" alt="${item.title}">
                <div class="checkout-item-badge">
                  <i class="fas fa-${item.type === 'bundle' ? 'box' : 'book'}"></i>
                </div>
              </div>
              
              <div class="checkout-item-details">
                <h4 class="checkout-item-title">${item.title}</h4>
                <span class="checkout-item-type">${item.type === 'bundle' ? 'Course Bundle' : 'Individual Course'}</span>
                <div class="checkout-item-description">
                  ${item.type === 'bundle' ? 'Multiple courses included' : 'Premium course content'}
                </div>
              </div>
              
              <div class="checkout-item-price">
                ${item.discountPrice && item.discountPrice > 0 ? 
                  `<span class="checkout-original-price">EGP${item.originalPrice.toFixed(2)}</span>
                   <span class="checkout-discount-badge">-${item.discountPrice.toFixed(0)}%</span><br>
                   <span class="checkout-final-price">EGP${item.price.toFixed(2)}</span>` :
                  `EGP${item.price.toFixed(2)}`
                }
              </div>
            </div>
            `).join('')}
          </div>
        </div>

        <!-- Order Total -->
        <div class="checkout-order-total">
          <h3 class="checkout-total-title">
            <i class="fas fa-calculator"></i>
            Order Total
          </h3>
          
          <div class="checkout-total-breakdown">
            <div class="checkout-total-row">
              <span class="checkout-total-label">Subtotal:</span>
              <span class="checkout-total-value">EGP${purchaseData.subtotal.toFixed(2)}</span>
            </div>
            <div class="checkout-total-row">
              <span class="checkout-total-label">Tax:</span>
              <span class="checkout-total-value">EGP${purchaseData.tax.toFixed(2)}</span>
            </div>
            <div class="checkout-total-row checkout-total-final">
              <span class="checkout-total-label">Total Paid:</span>
              <span class="checkout-total-value">EGP${purchaseData.total.toFixed(2)}</span>
            </div>
          </div>
        </div>
      </div>

      <!-- Next Steps -->
      <div class="checkout-next-steps">
        <h3 class="checkout-steps-title">
          <i class="fas fa-arrow-right"></i>
          What's Next?
        </h3>
        
        <div class="checkout-steps-list">
          <div class="checkout-step-item">
            <div class="checkout-step-icon">
              <i class="fas fa-envelope"></i>
            </div>
            <div class="checkout-step-content">
              <h4 class="checkout-step-title">Check Your Email</h4>
              <p class="checkout-step-description">
                We've sent you a confirmation email with your order details and course access information.
              </p>
            </div>
          </div>
          
          <div class="checkout-step-item">
            <div class="checkout-step-icon">
              <i class="fas fa-user-graduate"></i>
            </div>
            <div class="checkout-step-content">
              <h4 class="checkout-step-title">Access Your Courses</h4>
              <p class="checkout-step-description">
                Your purchased courses are now available in your student dashboard. Start learning right away!
              </p>
            </div>
          </div>
          
          <div class="checkout-step-item">
            <div class="checkout-step-icon">
              <i class="fas fa-headset"></i>
            </div>
            <div class="checkout-step-content">
              <h4 class="checkout-step-title">Get Support</h4>
              <p class="checkout-step-description">
                Need help? Our support team is available 24/7 to assist you with any questions.
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="checkout-action-buttons">
        <a href="/student/dashboard" class="checkout-btn-primary">
          <i class="fas fa-tachometer-alt"></i>
          <span>Go to Dashboard</span>
        </a>
        <a href="/student/enrolled-courses" class="checkout-btn-secondary">
          <i class="fas fa-book"></i>
          <span>View My Courses</span>
        </a>
        <a href="/purchase/purchase-history" class="checkout-btn-outline">
          <i class="fas fa-history"></i>
          <span>Purchase History</span>
        </a>
      </div>
    </div>
  `;

    // Insert the order summary
    const container = document.querySelector('.checkout-container');
    if (container) {
      container.innerHTML = orderSummaryHTML;
    }
  }
</script>

<style>
  /* Paymob Security Notice */
  .paymob-security-notice {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 1rem;
    padding: 0.75rem;
    background: #e8f5e8;
    border: 1px solid #4caf50;
    border-radius: 8px;
    color: #2e7d32;
    font-size: 0.9rem;
  }

  .paymob-security-notice i {
    color: #4caf50;
  }

  /* Payment Iframe Modal */
  .payment-iframe-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    z-index: 10000;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .payment-iframe-modal.show {
    opacity: 1;
    visibility: visible;
  }

  .payment-iframe-container {
    background: var(--checkout-bg-card, white);
    border-radius: 20px;
    width: 95%;
    max-width: 900px;
    max-height: 95vh;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
    border: 1px solid var(--checkout-border-color, #e5e7eb);
    transform: scale(0.9);
    transition: transform 0.3s ease;
  }

  .dark-theme .payment-iframe-container {
    background: var(--checkout-bg-card);
    border-color: var(--checkout-border-color);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);
  }

  .payment-iframe-modal.show .payment-iframe-container {
    transform: scale(1);
  }

  .payment-iframe-header {
    background: linear-gradient(135deg, #B80101, #dc2626);
    color: white;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-radius: 15px 15px 0 0;
    box-shadow: 0 4px 15px rgba(184, 1, 1, 0.2);
  }

  .dark-theme .payment-iframe-header {
    background: linear-gradient(135deg, #ef4444, #dc2626);
    box-shadow: 0 4px 15px rgba(239, 68, 68, 0.3);
  }

  .payment-iframe-header h3 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: 700;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .payment-iframe-header i {
    margin-right: 0.75rem;
    font-size: 1.3rem;
  }

  .payment-iframe-close {
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid rgba(255, 255, 255, 0.2);
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    padding: 0.75rem;
    border-radius: 50%;
    transition: all 0.3s ease;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
  }

  .payment-iframe-close:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.4);
    transform: scale(1.1);
  }

  .payment-iframe-body {
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
  }

  .payment-info {
    padding: 0.5rem 2rem;
    background: var(--checkout-bg-secondary, #f8fafc);
    border-bottom: 2px solid var(--checkout-border-color, #e9ecef);
    display: flex;
    gap: 2.5rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .dark-theme .payment-info {
    background: var(--checkout-bg-secondary);
    border-bottom-color: var(--checkout-border-color);
  }

  .payment-info-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    text-align: center;
    padding: 1rem;
    background: var(--checkout-bg-card, white);
    border-radius: 12px;
    border: 1px solid var(--checkout-border-light, #f3f4f6);
    min-width: 200px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  }

  .dark-theme .payment-info-item {
    background: var(--checkout-bg-card);
    border-color: var(--checkout-border-light);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  .payment-info-item .label {
    font-size: 0.85rem;
    color: var(--checkout-text-muted, #6c757d);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .payment-info-item .value {
    font-size: 1.1rem;
    color: var(--checkout-primary, #B80101);
    font-weight: 700;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  .dark-theme .payment-info-item .value {
    color: var(--checkout-primary);
  }

  .payment-iframe {
    flex: 1;
    width: 100%;
    min-height: 550px;
    border: none;
    background: var(--checkout-bg-card, white);
    border-radius: 0 0 20px 20px;
  }

  .dark-theme .payment-iframe {
    background: var(--checkout-bg-card);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .payment-iframe-container {
      width: 98%;
      max-height: 95vh;
    }

    .payment-iframe-header {
      padding: 1rem;
    }

    .payment-iframe-header h3 {
      font-size: 1.25rem;
    }

    .payment-info {
      padding: 1.25rem;
      gap: 1.5rem;
    }

    .payment-info-item {
      min-width: 160px;
      padding: 0.75rem;
    }

    .payment-iframe {
      min-height: 450px;
    }
  }

  @media (max-width: 480px) {
    .payment-iframe-container {
      width: 100%;
      margin: 0;
      border-radius: 0;
      max-height: 100vh;
    }

    .payment-iframe-header {
      padding: 1rem;
      border-radius: 0;
    }

    .payment-iframe-header h3 {
      font-size: 1.1rem;
    }

    .payment-iframe-close {
      width: 40px;
      height: 40px;
      padding: 0.5rem;
    }

    .payment-info {
      flex-direction: column;
      gap: 1rem;
      padding: 1rem;
    }

    .payment-info-item {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      min-width: auto;
      text-align: left;
    }

    .payment-info-item .label,
    .payment-info-item .value {
      margin: 0;
    }

    .payment-iframe {
      border-radius: 0;
      min-height: 400px;
    }
  }

  /* Discount Price Styles */
  .checkout-original-price {
    text-decoration: line-through;
    color: #999;
    font-size: 0.9em;
  }

  .checkout-discount-badge {
    background: linear-gradient(135deg, #ff6b6b, #ee5a52);
    color: white;
    padding: 2px 6px;
    border-radius: 12px;
    font-size: 0.75em;
    font-weight: bold;
    margin-left: 8px;
  }

  .checkout-final-price {
    color: #27ae60;
    font-weight: bold;
    font-size: 1.1em;
  }

  /* Promo Code Styles */
  .promo-code-container {
    margin-bottom: 1rem;
  }

  .promo-code-input-group {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .promo-code-input-group .checkout-form-control {
    flex: 1;
    text-transform: uppercase;
    font-family: 'Courier New', monospace;
    font-weight: 600;
    letter-spacing: 0.05em;
  }

  .promo-apply-btn {
    background: linear-gradient(135deg, #B80101, #dc2626);
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 10px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
  }

  .promo-apply-btn:hover {
    background: linear-gradient(135deg, #dc2626, #ef4444);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(184, 1, 1, 0.3);
  }

  .promo-apply-btn:disabled {
    background: #6b7280;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .promo-code-message {
    padding: 0.75rem 1rem;
    border-radius: 8px;
    font-weight: 600;
    margin-top: 0.5rem;
  }

  .promo-code-message.success {
    background: #dcfce7;
    color: #166534;
    border: 1px solid #bbf7d0;
  }

  .promo-code-message.error {
    background: #fee2e2;
    color: #991b1b;
    border: 1px solid #fecaca;
  }

  .promo-code-message.info {
    background: #dbeafe;
    color: #1d4ed8;
    border: 1px solid #bfdbfe;
  }

  .applied-promo-code {
    background: linear-gradient(135deg, #dcfce7, #bbf7d0);
    border: 2px solid #22c55e;
    border-radius: 12px;
    padding: 1rem;
    margin-top: 1rem;
  }

  .applied-promo-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    color: #166534;
  }

  .applied-promo-info i {
    font-size: 1.2rem;
    color: #22c55e;
  }

  .promo-code-text {
    font-weight: 700;
    font-family: 'Courier New', monospace;
    font-size: 1.1rem;
    letter-spacing: 0.05em;
  }

  .promo-discount-amount {
    font-weight: 700;
    color: #059669;
    margin-left: auto;
  }

  .promo-remove-btn {
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid #ef4444;
    color: #dc2626;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .promo-remove-btn:hover {
    background: #ef4444;
    color: white;
    transform: scale(1.1);
  }

  .promo-discount {
    color: #059669 !important;
    font-weight: 700;
  }

  /* Dark theme support for promo codes */
  .dark-theme .promo-code-message.success {
    background: rgba(34, 197, 94, 0.1);
    color: #4ade80;
    border-color: rgba(34, 197, 94, 0.3);
  }

  .dark-theme .promo-code-message.error {
    background: rgba(239, 68, 68, 0.1);
    color: #f87171;
    border-color: rgba(239, 68, 68, 0.3);
  }

  .dark-theme .promo-code-message.info {
    background: rgba(59, 130, 246, 0.1);
    color: #60a5fa;
    border-color: rgba(59, 130, 246, 0.3);
  }

  .dark-theme .applied-promo-code {
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.1), rgba(34, 197, 94, 0.05));
    border-color: rgba(34, 197, 94, 0.3);
  }

  .dark-theme .applied-promo-info {
    color: #4ade80;
  }

  .dark-theme .applied-promo-info i {
    color: #4ade80;
  }

  .dark-theme .promo-discount-amount {
    color: #4ade80;
  }

  /* Responsive design for promo codes */
  @media (max-width: 768px) {
    .promo-code-input-group {
      flex-direction: column;
    }

    .promo-apply-btn {
      width: 100%;
      justify-content: center;
    }

    .applied-promo-info {
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .promo-discount-amount {
      margin-left: 0;
    }
  }
</style>


<%- include('partials/footer') %>