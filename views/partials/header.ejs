<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="Professor Mathematics - Advanced Mathematical Education & Excellence">
  <meta name="keywords" content="mathematics, advanced calculus, differential equations, linear algebra, mathematical analysis">
  <title><%= title %> | Professor Mathematics</title>

  <!-- Favicon -->
  <link rel="icon" type="image/png" href="/images/favicon.png">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=Poppins:wght@400;500;600;700;800&display=swap" rel="stylesheet">

  <!-- Mathematical Fonts -->
  <link href="https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css" rel="stylesheet">

  <!-- AOS - Animate On Scroll Library -->
  <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">

  <!-- Custom CSS -->
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/animations.css">
  <link rel="stylesheet" href="/css/footer.css">
  <link rel="stylesheet" href="/css/auth.css">
  <link rel="stylesheet" href="/css/theme-toggle.css">
  <link rel="stylesheet" href="/css/advanced-header.css">
  <link rel="stylesheet" href="/css/index.css">

  <!-- Preload Critical JS -->
  <link rel="preload" href="https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js" as="script">
  <link rel="preload" href="https://cdn.jsdelivr.net/npm/gsap@3.9.1/dist/gsap.min.js" as="script">
  <script>
    (function() {
      try {
        var saved = localStorage.getItem('theme');
        if (saved) {
          document.documentElement.classList.remove('light-theme', 'dark-theme');
          document.body.classList.remove('light-theme', 'dark-theme');
          document.documentElement.classList.add(saved + '-theme');
          document.body.classList.add(saved + '-theme');
        } else {
          document.documentElement.classList.add('light-theme');
          document.body.classList.add('light-theme');
        }
      } catch (e) {}
    })();
  </script>
</head>

<body class="<%= theme %>-theme" data-initial-theme="<%= theme %>">
  <!-- Advanced Scroll Progress Bar -->
  <div class="scroll-progress-container">
    <div id="scroll-progress" class="scroll-progress-bar"></div>
  </div>
  
  <!-- Advanced Professional Header -->
  <header class="advanced-header">
    <!-- Backdrop Effects -->
    <div class="header-backdrop">
      <div class="header-glass-effect"></div>
      <div class="header-gradient-overlay"></div>
      <div class="header-math-patterns">
        <span class="math-pattern">∫</span>
        <span class="math-pattern">∑</span>
        <span class="math-pattern">∂</span>
        <span class="math-pattern">∇</span>
        <span class="math-pattern">∏</span>
      </div>
    </div>
    
    <div class="header-container">
      <!-- Logo Section -->
      <div class="header-logo-section">
        <a href="/" class="header-logo-link">
            <div class="header-logo-wrapper">
              <div class="logo-frame">
                <img src="/images/K.png" alt="Professor Mathematics" class="logo-image">
                <div class="logo-glow"></div>
              </div>
            </div>
        </a>
      </div>
      
      
      <!-- Navigation Section -->
      <div class="header-nav-section">
        <nav class="header-nav">
          <ul class="nav-list">
            <li class="nav-item">
              <a href="#hero" class="nav-link active smooth-scroll">
                <div class="nav-icon-wrapper">
                  <i class="fas fa-home"></i>
                </div>
                <span class="nav-text">Home</span>
                <span class="nav-indicator"></span>
              </a>
            </li>
            <li class="nav-item">
              <a href="#free-tests" class="nav-link smooth-scroll">
                <div class="nav-icon-wrapper">
                  <i class="fas fa-clipboard-check"></i>
                </div>
                <span class="nav-text">Free Tests</span>
                <span class="nav-indicator"></span>
              </a>
            </li>
            <li class="nav-item">
              <a href="#brilliant-students-est" class="nav-link smooth-scroll">
                <div class="nav-icon-wrapper">
                  <i class="fas fa-trophy"></i>
                </div>
                <span class="nav-text">Brilliant Students</span>
                <span class="nav-indicator"></span>
              </a>
            </li>
            <li class="nav-item">
              <a href="#courses" class="nav-link">
                <div class="nav-icon-wrapper">
                  <i class="fas fa-graduation-cap"></i>
                </div>
                <span class="nav-text">Courses</span>
                <span class="nav-indicator"></span>
              </a>
            </li>
            <li class="nav-item">
              <a href="#elkably-team" class="nav-link smooth-scroll">
                <div class="nav-icon-wrapper">
                  <i class="fas fa-users"></i>
                </div>
                <span class="nav-text">Our Team</span>
                <span class="nav-indicator"></span>
              </a>
            </li>
            <li class="nav-item">
              <a href="#score-calculator" class="nav-link smooth-scroll">
                <div class="nav-icon-wrapper">
                  <i class="fas fa-calculator"></i>
                </div>
                <span class="nav-text">Score Calculator</span>
                <span class="nav-indicator"></span>
              </a>
            </li>
          </ul>
        </nav>
      </div>
      
      <!-- Actions Section -->
      <div class="header-actions-section">
        <!-- Theme Toggle -->
        <div class="header-theme-toggle">
          <button class="theme-toggle-btn" id="themeToggle" aria-label="Toggle theme" title="Switch between light and dark mode">
            <div class="toggle-icon-container light-icon-container">
              <i class="fas fa-sun light-icon"></i>
            </div>
            <div class="toggle-icon-container dark-icon-container">
              <i class="fas fa-moon dark-icon"></i>
            </div>
            <span class="visually-hidden">Toggle Theme</span>
          </button>
        </div>
        
        <!-- Auth Actions -->
        <div class="header-auth-actions">
          <% if (locals.user) { %>
            <!-- Professional User Dropdown -->
            <div class="professional-user-dropdown" id="professionalUserDropdown">
              <button class="professional-dropdown-trigger" 
                      type="button" 
                      id="professionalDropdownTrigger" 
                      aria-expanded="false"
                      aria-haspopup="true"
                      aria-label="User account menu">
                <div class="trigger-content">
                  <div class="user-avatar-container">
                    <i class="fas fa-user-circle user-avatar-icon"></i>
                    <div class="avatar-status-indicator"></div>
                  </div>
                  <div class="user-info-container">
                    <span class="user-display-name"><%= user.name %></span>
                    <span class="user-role-badge">Student</span>
                  </div>
                  <div class="dropdown-chevron">
                    <i class="fas fa-chevron-down"></i>
                  </div>
                </div>
              </button>
              
              <!-- Professional Dropdown Menu -->
              <div class="professional-dropdown-menu" 
                   id="professionalDropdownMenu" 
                   role="menu" 
                   aria-labelledby="professionalDropdownTrigger">
                
                <!-- Mobile Backdrop -->
                <div class="professional-dropdown-backdrop" id="professionalDropdownBackdrop"></div>
                
                <!-- Menu Container -->
                <div class="dropdown-menu-container">
                  
                  <!-- User Header Section -->
                  <div class="dropdown-user-header">
                    <div class="user-header-avatar">
                      <i class="fas fa-user-circle"></i>
                    </div>
                    <div class="user-header-info">
                      <div class="user-header-name"><%= user.name %></div>
                      <div class="user-header-email"><%= user.email %></div>
                      <div class="user-header-status">
                        <span class="status-indicator active"></span>
                        <span class="status-text">Online</span>
                      </div>
                    </div>
                  </div>
                  
                  <!-- Menu Divider -->
                  <div class="dropdown-menu-divider"></div>
                  
                  <!-- Navigation Items -->
                  <div class="dropdown-navigation-items">
                    <a class="dropdown-nav-item" href="/dashboard" role="menuitem">
                      <div class="nav-item-icon">
                        <i class="fas fa-tachometer-alt"></i>
                      </div>
                      <div class="nav-item-content">
                        <span class="nav-item-title">Dashboard</span>
                        <span class="nav-item-subtitle">View your progress</span>
                      </div>
                      <div class="nav-item-arrow">
                        <i class="fas fa-chevron-right"></i>
                      </div>
                    </a>
                    
                    <a class="dropdown-nav-item" href="/profile" role="menuitem">
                      <div class="nav-item-icon">
                        <i class="fas fa-user-edit"></i>
                      </div>
                      <div class="nav-item-content">
                        <span class="nav-item-title">Profile</span>
                        <span class="nav-item-subtitle">Manage your account</span>
                      </div>
                      <div class="nav-item-arrow">
                        <i class="fas fa-chevron-right"></i>
                      </div>
                    </a>
                    
                    <a class="dropdown-nav-item" href="/enrolled-courses" role="menuitem">
                      <div class="nav-item-icon">
                        <i class="fas fa-graduation-cap"></i>
                      </div>
                      <div class="nav-item-content">
                        <span class="nav-item-title">My Courses</span>
                        <span class="nav-item-subtitle">Continue learning</span>
                      </div>
                      <div class="nav-item-arrow">
                        <i class="fas fa-chevron-right"></i>
                      </div>
                    </a>
                    
                    <a class="dropdown-nav-item" href="/quizzes" role="menuitem">
                      <div class="nav-item-icon">
                        <i class="fas fa-clipboard-check"></i>
                      </div>
                      <div class="nav-item-content">
                        <span class="nav-item-title">Quizzes</span>
                        <span class="nav-item-subtitle">Test your knowledge</span>
                      </div>
                      <div class="nav-item-arrow">
                        <i class="fas fa-chevron-right"></i>
                      </div>
                    </a>
                    
                    <a class="dropdown-nav-item" href="/wishlist" role="menuitem">
                      <div class="nav-item-icon">
                        <i class="fas fa-heart"></i>
                      </div>
                      <div class="nav-item-content">
                        <span class="nav-item-title">Wishlist</span>
                        <span class="nav-item-subtitle">Saved courses</span>
                      </div>
                      <div class="nav-item-arrow">
                        <i class="fas fa-chevron-right"></i>
                      </div>
                    </a>
                    
                    <a class="dropdown-nav-item" href="/settings" role="menuitem">
                      <div class="nav-item-icon">
                        <i class="fas fa-cog"></i>
                      </div>
                      <div class="nav-item-content">
                        <span class="nav-item-title">Settings</span>
                        <span class="nav-item-subtitle">Preferences</span>
                      </div>
                      <div class="nav-item-arrow">
                        <i class="fas fa-chevron-right"></i>
                      </div>
                    </a>
                  </div>
                  
                  <!-- Menu Divider -->
                  <div class="dropdown-menu-divider"></div>
                  
                  <!-- Logout Section -->
                  <div class="dropdown-logout-section">
                    <a class="dropdown-logout-item" href="/auth/logout" role="menuitem">
                      <div class="logout-item-icon">
                        <i class="fas fa-sign-out-alt"></i>
                      </div>
                      <div class="logout-item-content">
                        <span class="logout-item-title">Sign Out</span>
                        <span class="logout-item-subtitle">Log out of your account</span>
                      </div>
                    </a>
                  </div>
                  
                </div>
              </div>
            </div>
          <% } else { %>
            <div class="auth-buttons">
              <a href="/auth/login" class="login-btn">
                <i class="fas fa-user"></i>
                <span>Student Login</span>
              </a>
              <a href="/auth/register" class="register-btn">
                <span>Join Program</span>
                <i class="fas fa-arrow-right"></i>
              </a>
            </div>
          <% } %>
        </div>

        <!-- Shopping Cart -->
        <div class="header-cart">
          <button class="cart-toggle-btn" id="cartToggle" aria-label="Toggle shopping cart" title="View shopping cart">
            <div class="cart-icon-wrapper">
              <i class="fas fa-shopping-cart cart-icon"></i>
              <span class="cart-count" id="cartCount"><%= cartCount || 0 %></span>
            </div>
            <span class="visually-hidden">Shopping Cart</span>
          </button>
        </div>
      </div>
    </div>
  </header>

  <!-- Shopping Cart Sidebar -->
  <div class="cart-sidebar" id="cartSidebar">
    <div class="cart-sidebar-overlay" id="cartSidebarOverlay"></div>
    <div class="cart-sidebar-content">
      <div class="cart-sidebar-header">
        <h3 class="cart-sidebar-title">
          <i class="fas fa-shopping-cart"></i>
          Shopping Cart
        </h3>
        <button class="cart-sidebar-close" id="cartSidebarClose">
          <i class="fas fa-times"></i>
        </button>
      </div>
      
      <div class="cart-sidebar-body">
        <div class="cart-items" id="cartItems">
          <% if (cart.length > 0) { %>
            <% cart.forEach((item, index) => { %>
            <div class="cart-item" data-id="<%= item.id %>" data-item-id="<%= item.id %>" data-item-type="<%= item.type %>">
              <div class="cart-item-image">
                <img src="<%= item.image %>" alt="<%= item.title %>" loading="lazy">
              </div>
              <div class="cart-item-details">
                <h5 class="cart-item-title"><%= item.title %></h5>
                <div class="cart-item-price">$<%= item.price.toFixed(2) %></div>
                <div class="cart-item-info">
                  <span class="cart-item-type"><%= item.type === 'bundle' ? 'Course Bundle' : 'Individual Course' %></span>
                </div>
              </div>
              <div class="cart-item-actions">
                <button class="cart-remove-btn" onclick="removeFromCart('<%= item.id %>')" title="Remove item">
                  <i class="fas fa-trash"></i>
                </button>
              </div>
            </div>
            <% }); %>
          <% } else { %>
            <div class="cart-empty">
              <div class="cart-empty-icon">
                <i class="fas fa-shopping-cart"></i>
              </div>
              <h4>Your cart is empty</h4>
              <p>Add some courses to get started!</p>
            </div>
          <% } %>
        </div>
      </div>
      
      <div class="cart-sidebar-footer">
        <div class="cart-total" id="cartTotal">
          <div class="cart-total-row">
            <span>Subtotal:</span>
            <span class="cart-subtotal">$<%= cart.reduce((sum, item) => sum + item.price, 0).toFixed(2) %></span>
          </div>
          <div class="cart-total-row">
            <span>Tax:</span>
            <span class="cart-tax">$<%= (cart.reduce((sum, item) => sum + item.price, 0) * 0.1).toFixed(2) %></span>
          </div>
          <div class="cart-total-row cart-total-final">
            <span>Total:</span>
            <span class="cart-total-amount">$<%= (cart.reduce((sum, item) => sum + item.price, 0) * 1.1).toFixed(2) %></span>
          </div>
        </div>
        
        <div class="cart-actions">
          <button class="btn-cart-checkout" id="cartCheckout" onclick="proceedToCheckout()" <%= cart.length === 0 ? 'disabled' : '' %>>
            <i class="fas fa-credit-card"></i>
            Checkout
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Flash Messages - Fixed positioning -->
  <div class="flash-messages-container-fixed">
    <% if(locals.success_msg && success_msg != ''){ %>
    <div class="alert alert-success alert-dismissible fade show flash-message-fixed" role="alert">
      <div class="flash-message-content">
        <i class="fas fa-check-circle me-2"></i>
        <span><%= success_msg %></span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    </div>
    <% } %>

    <% if(locals.error_msg && error_msg != ''){ %>
    <div class="alert alert-danger alert-dismissible fade show flash-message-fixed" role="alert">
      <div class="flash-message-content">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <span><%= error_msg %></span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    </div>
    <% } %>

    <% if(locals.error && error != ''){ %>
    <div class="alert alert-danger alert-dismissible fade show flash-message-fixed" role="alert">
      <div class="flash-message-content">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <span><%= error %></span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    </div>
    <% } %>
  </div>

  <!-- Advanced Header JavaScript -->
  <script src="/js/advanced-header.js" defer></script>
  
  <!-- PROFESSIONAL DROPDOWN - BULLETPROOF SOLUTION -->
  <script>
    // Professional dropdown with guaranteed z-index fix
    class ProfessionalDropdown {
      constructor() {
        this.trigger = document.getElementById('professionalDropdownTrigger');
        this.menu = document.getElementById('professionalDropdownMenu');
        this.backdrop = document.getElementById('professionalDropdownBackdrop');
        this.isOpen = false;
        this.init();
      }
      
      init() {
        if (!this.trigger || !this.menu) {
          console.warn('Professional dropdown elements not found');
          return;
        }
        
        this.bindEvents();
        this.forceMaximumZIndex();
        console.log('Professional dropdown initialized successfully');
      }
      
      bindEvents() {
        // Trigger click
        this.trigger.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          this.toggle();
        });
        
        // Backdrop click
        if (this.backdrop) {
          this.backdrop.addEventListener('click', () => {
            this.close();
          });
        }
        
        // Escape key
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && this.isOpen) {
            this.close();
          }
        });
        
        // Click outside
        document.addEventListener('click', (e) => {
          if (this.isOpen && !this.menu.contains(e.target) && !this.trigger.contains(e.target)) {
            this.close();
          }
        });
        
        // Window resize
        window.addEventListener('resize', () => {
          if (this.isOpen) {
            this.adjustPosition();
          }
        });
      }
      
      toggle() {
        if (this.isOpen) {
          this.close();
        } else {
          this.open();
        }
      }
      
      open() {
        if (this.isOpen) return;
        
        this.isOpen = true;
        
        // Force maximum z-index immediately
        this.forceMaximumZIndex();
        
        // Add active class to trigger
        this.trigger.classList.add('active');
        this.trigger.setAttribute('aria-expanded', 'true');
        
        // Show backdrop
        if (this.backdrop) {
          this.backdrop.style.display = 'block';
          this.backdrop.style.opacity = '0';
          requestAnimationFrame(() => {
            this.backdrop.classList.add('show');
          });
        }
        
        // Show menu with animation
        this.menu.style.display = 'block';
        this.menu.style.opacity = '0';
        this.menu.style.transform = 'translateX(-50%) translateY(-20px) scale(0.95)';
        this.menu.style.visibility = 'visible';
        this.menu.style.pointerEvents = 'none';
        
        // Force reflow
        this.menu.offsetHeight;
        
        // Animate in
        requestAnimationFrame(() => {
          this.menu.classList.add('show');
          this.menu.style.opacity = '1';
          this.menu.style.transform = 'translateX(-50%) translateY(0) scale(1)';
          this.menu.style.pointerEvents = 'auto';
          
          // Force z-index again after animation
          this.forceMaximumZIndex();
        });
        
        // Prevent body scroll on mobile
        if (window.innerWidth <= 768) {
          document.body.style.overflow = 'hidden';
        }
        
        // Adjust position
        this.adjustPosition();
        
        console.log('Professional dropdown opened with maximum z-index');
      }
      
      close() {
        if (!this.isOpen) return;
        
        this.isOpen = false;
        
        // Remove active class
        this.trigger.classList.remove('active');
        this.trigger.setAttribute('aria-expanded', 'false');
        
        // Hide backdrop
        if (this.backdrop) {
          this.backdrop.classList.remove('show');
          setTimeout(() => {
            this.backdrop.style.display = 'none';
          }, 300);
        }
        
        // Hide menu with animation
        this.menu.classList.remove('show');
        this.menu.style.opacity = '0';
        this.menu.style.transform = 'translateX(-50%) translateY(-20px) scale(0.95)';
        this.menu.style.pointerEvents = 'none';
        
        // Remove from DOM after animation
        setTimeout(() => {
          this.menu.style.display = 'none';
          this.menu.style.visibility = 'hidden';
        }, 400);
        
        // Restore body scroll
        document.body.style.overflow = '';
        
        console.log('Professional dropdown closed successfully');
      }
      
      adjustPosition() {
        // Adjust position based on screen size
        if (window.innerWidth <= 768) {
          this.menu.style.left = '10px';
          this.menu.style.right = '10px';
          this.menu.style.transform = 'translateX(0) translateY(-20px) scale(0.95)';
          
          if (this.isOpen) {
            this.menu.style.transform = 'translateX(0) translateY(0) scale(1)';
          }
        } else {
          this.menu.style.left = '50%';
          this.menu.style.right = 'auto';
          this.menu.style.transform = 'translateX(-50%) translateY(-20px) scale(0.95)';
          
          if (this.isOpen) {
            this.menu.style.transform = 'translateX(-50%) translateY(0) scale(1)';
          }
        }
      }
      
      forceMaximumZIndex() {
        // Nuclear option - force maximum possible z-index
        const maxZIndex = 2147483647;
        
        // Force z-index on all elements
        [this.menu, this.backdrop, this.trigger].forEach(element => {
          if (element) {
            element.style.setProperty('z-index', maxZIndex.toString(), 'important');
            element.style.setProperty('position', 'fixed', 'important');
          }
        });
        
        // Force on parent container
        const container = this.trigger.closest('.professional-user-dropdown');
        if (container) {
          container.style.setProperty('z-index', maxZIndex.toString(), 'important');
        }
        
        // Override any content sections
        const contentSections = document.querySelectorAll([
          '.hero-section',
          '.content-card',
          '.main-content',
          '.section',
          '[class*="hero"]',
          '[class*="content"]',
          '[class*="card"]',
          '[class*="section"]'
        ].join(', '));
        
        contentSections.forEach(section => {
          section.style.setProperty('z-index', 'auto', 'important');
        });
        
        // Multiple attempts to ensure z-index is applied
        setTimeout(() => this.applyZIndexForce(), 10);
        setTimeout(() => this.applyZIndexForce(), 50);
        setTimeout(() => this.applyZIndexForce(), 100);
      }
      
      applyZIndexForce() {
        const maxZIndex = 2147483647;
        
        if (this.menu) {
          this.menu.style.setProperty('z-index', maxZIndex.toString(), 'important');
          this.menu.style.setProperty('position', 'fixed', 'important');
        }
        
        if (this.backdrop) {
          this.backdrop.style.setProperty('z-index', (maxZIndex - 1).toString(), 'important');
          this.backdrop.style.setProperty('position', 'fixed', 'important');
        }
      }
    }
    
    // Initialize professional dropdown when DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
      // Wait a bit to ensure all elements are rendered
      setTimeout(() => {
        new ProfessionalDropdown();
      }, 100);
    });
  </script>

  <!-- Cart Data -->
  <script>
    window.cartData = <%- JSON.stringify(cart || []) %>;
  </script>

  <!-- Cart JavaScript Functions -->
  <script>
    // Global cart management
    window.globalCart = {
      // Update cart count in header
      updateCartCount: function() {
        const cartCount = document.getElementById('cartCount');
        if (cartCount) {
          // Get cart count from session or localStorage
          const sessionCart = this.getSessionCart();
          const totalItems = sessionCart.length;
          cartCount.textContent = totalItems;
          
          // Add animation class
          cartCount.classList.add('cart-count-updated');
          setTimeout(() => cartCount.classList.remove('cart-count-updated'), 300);
        }
      },
      
      // Get cart from session (this would be populated by server-side rendering)
      getSessionCart: function() {
        // This would be populated by the server with actual cart data
        return window.sessionCart || [];
      },
      
      // Set session cart (called by server-side rendering)
      setSessionCart: function(cart) {
        window.sessionCart = cart;
        this.updateCartCount();
      },
      
      // Refresh cart data from server
      refreshCartData: function() {
        fetch('/purchase/cart', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        })
        .then(response => {
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          return response.json();
        })
        .then(data => {
          if (data.success) {
            window.sessionCart = data.cart || [];
            console.log('Cart data refreshed:', window.sessionCart);
            this.updateCartSidebar();
          } else {
            console.error('Failed to refresh cart data:', data.message);
          }
        })
        .catch(error => {
          console.error('Error refreshing cart data:', error);
          // Don't update cart on error, keep existing data
        });
      },
      
      // Update cart sidebar content
      updateCartSidebar: function() {
        // Update cart count
        this.updateCartCount();
        
        // Update cart items display
        this.updateCartItems();
        
        // Update cart totals
        this.updateCartTotals();
      },
      
      // Update cart items display
      updateCartItems: function() {
        const cartItems = document.getElementById('cartItems');
        if (!cartItems) return;
        
        const sessionCart = this.getSessionCart();
        
        if (sessionCart.length === 0) {
          cartItems.innerHTML = `
            <div class="cart-empty">
              <div class="cart-empty-icon">
                <i class="fas fa-shopping-cart"></i>
              </div>
              <h4>Your cart is empty</h4>
              <p>Add some courses to get started!</p>
            </div>
          `;
          return;
        }
        
        cartItems.innerHTML = sessionCart.map(item => `
          <div class="cart-item" data-id="${item.id}" data-item-id="${item.id}" data-item-type="${item.type}">
            <div class="cart-item-image">
              <img src="${item.image}" alt="${item.title}" loading="lazy">
            </div>
            <div class="cart-item-details">
              <h5 class="cart-item-title">${item.title}</h5>
              <div class="cart-item-price">$${item.price.toFixed(2)}</div>
              <div class="cart-item-info">
                <span class="cart-item-type">${item.type === 'bundle' ? 'Course Bundle' : 'Individual Course'}</span>
              </div>
            </div>
            <div class="cart-item-actions">
              <button class="cart-remove-btn" onclick="removeFromCart('${item.id}')" title="Remove item">
                <i class="fas fa-trash"></i>
              </button>
            </div>
          </div>
        `).join('');
      },
      
      // Update cart totals
      updateCartTotals: function() {
        const sessionCart = this.getSessionCart();
        const subtotal = sessionCart.reduce((sum, item) => sum + item.price, 0);
        const tax = subtotal * 0.1;
        const total = subtotal + tax;
        
        const subtotalEl = document.querySelector('.cart-subtotal');
        const taxEl = document.querySelector('.cart-tax');
        const totalEl = document.querySelector('.cart-total-amount');
        const checkoutBtn = document.getElementById('cartCheckout');
        
        if (subtotalEl) subtotalEl.textContent = `$${subtotal.toFixed(2)}`;
        if (taxEl) taxEl.textContent = `$${tax.toFixed(2)}`;
        if (totalEl) totalEl.textContent = `$${total.toFixed(2)}`;
        if (checkoutBtn) checkoutBtn.disabled = sessionCart.length === 0;
      }
    };

// Remove item from cart sidebar
function removeFromCartSidebar(itemId, itemType) {
  console.log('Removing item from cart sidebar:', itemId, itemType);
  
  fetch('/purchase/cart/remove', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      itemId: itemId,
      itemType: itemType
    })
  })
  .then(response => {
    console.log('Response status:', response.status);
    // Check if response is not ok (e.g., 401 Unauthorized)
    if (!response.ok) {
      if (response.status === 401) {
        showCartNotification('Please login to manage cart items', 'error');
        setTimeout(() => {
          window.location.href = '/auth/login';
        }, 3500);
        return;
      }
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    return response.json();
  })
  .then(data => {
    console.log('Remove cart response:', data);
    if (data.success) {
      // Update session cart data
      if (window.sessionCart) {
        window.sessionCart = window.sessionCart.filter(cartItem => cartItem.id !== itemId);
      }
      showCartNotification('Item removed from cart', 'success');
      window.globalCart.updateCartSidebar();
    } else {
      showCartNotification(data.message || 'Failed to remove item from cart', 'error');
    }
  })
  .catch(error => {
    console.error('Error removing from cart:', error);
    showCartNotification('Error removing item from cart', 'error');
  });
}

    // Global addToCart function for use across all pages
    function addToCart(item) {
      // Check if user is logged in (server-side check)
      <% if (!user) { %>
        showCartNotification('Please login to add items to cart', 'error');
        setTimeout(() => {
          window.location.href = '/auth/login';
        }, 3500);
        return;
      <% } %>
      
      // Add to cart via API
      fetch('/purchase/cart/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          itemId: item.id,
          itemType: item.type || 'course',
          title: item.title,
          price: item.price,
          image: item.image
        })
      })
      .then(response => {
        // Check if response is not ok (e.g., 401 Unauthorized)
        if (!response.ok) {
          if (response.status === 401) {
            showCartNotification('Please login to add items to cart', 'error');
            setTimeout(() => {
              window.location.href = '/auth/login';
            }, 3500);
            return;
          }
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          showCartNotification(data.message || 'Item added to cart successfully', 'success');
          
          // Update global cart count and refresh cart data
          if (window.globalCart) {
            window.globalCart.refreshCartData();
          }
          
          // Show cart sidebar
          showCartSidebar();
        } else {
          showCartNotification(data.message || 'Failed to add item to cart', 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showCartNotification('Error adding item to cart', 'error');
      });
    }

    // Note: Quantity controls removed for better UX - each item is unique in cart

    // Remove from cart (compatible with index.ejs)
    function removeFromCart(itemId) {
      // Ensure sessionCart is initialized
      if (!window.sessionCart) {
        window.sessionCart = [];
        showCartNotification('Cart is empty', 'error');
        return;
      }
      
      // Find the item in the session cart to get its type
      const item = window.sessionCart.find(cartItem => cartItem.id === itemId);
      if (!item) {
        showCartNotification('Item not found in cart', 'error');
        return;
      }
      
      console.log('Removing item from cart:', item);
      
      fetch('/purchase/cart/remove', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          itemId: itemId,
          itemType: item.type
        })
      })
      .then(response => {
        console.log('Response status:', response.status);
        // Check if response is not ok (e.g., 401 Unauthorized)
        if (!response.ok) {
          if (response.status === 401) {
            showCartNotification('Please login to manage cart items', 'error');
            setTimeout(() => {
              window.location.href = '/auth/login';
            }, 3500);
            return;
          }
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        console.log('Remove cart response:', data);
        if (data.success) {
          // Update session cart data
          window.sessionCart = window.sessionCart.filter(cartItem => cartItem.id !== itemId);
          showCartNotification('Item removed from cart', 'success');
          window.globalCart.updateCartSidebar();
        } else {
          showCartNotification(data.message || 'Failed to remove item from cart', 'error');
        }
      })
      .catch(error => {
        console.error('Error removing from cart:', error);
        showCartNotification('Error removing item from cart', 'error');
      });
    }

    // Proceed to checkout page
    function proceedToCheckout() {
      // Check if cart is empty
      if (!window.sessionCart || window.sessionCart.length === 0) {
        showCartNotification('Your cart is empty. Please add items before checkout.', 'error');
        return;
      }
      
      // Double-check with server cart data
      const cartCount = document.getElementById('cartCount');
      if (cartCount && parseInt(cartCount.textContent) === 0) {
        showCartNotification('Your cart is empty. Please add items before checkout.', 'error');
        return;
      }
      
      // Redirect to checkout page
      window.location.href = '/purchase/checkout';
    }

    // Show cart sidebar
    function showCartSidebar() {
      const cartSidebar = document.getElementById('cartSidebar');
      if (cartSidebar) {
        cartSidebar.classList.add('cart-sidebar-open');
        document.body.classList.add('cart-sidebar-active');
        document.body.style.overflow = 'hidden';
      }
    }

    // Hide cart sidebar
    function hideCartSidebar() {
      const cartSidebar = document.getElementById('cartSidebar');
      if (cartSidebar) {
        cartSidebar.classList.remove('cart-sidebar-open');
        document.body.classList.remove('cart-sidebar-active');
        document.body.style.overflow = '';
      }
    }

    // Show cart notification
    function showCartNotification(message, type = 'success') {
      // Create notification element
      const notification = document.createElement('div');
      notification.className = `cart-notification cart-notification-${type}`;
      
      // Choose icon based on type
      const iconClass = type === 'success' ? 'fas fa-check-circle' : 
                       type === 'error' ? 'fas fa-exclamation-circle' : 
                       'fas fa-info-circle';
      
      notification.innerHTML = `
        <div class="cart-notification-content">
          <i class="${iconClass}"></i>
          <span>${message}</span>
        </div>
      `;
      
      document.body.appendChild(notification);
      
      // Show notification
      setTimeout(() => notification.classList.add('show'), 100);
      
      // Hide notification
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => notification.remove(), 300);
      }, 4000);
    }

    // Cart sidebar event listeners
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize cart data from server
      window.sessionCart = window.cartData || [];
      console.log('Initializing cart with data:', window.sessionCart);
      window.globalCart.setSessionCart(window.sessionCart);
      
      // Refresh cart data from server to ensure accuracy
      window.globalCart.refreshCartData();
      
    // Cart toggle button
    const cartToggle = document.getElementById('cartToggle');
    const cartSidebar = document.getElementById('cartSidebar');
    const cartSidebarClose = document.getElementById('cartSidebarClose');
    const cartSidebarOverlay = document.getElementById('cartSidebarOverlay');

    if (cartToggle) {
      cartToggle.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        // Refresh cart data when opening sidebar
        window.globalCart.refreshCartData();
        showCartSidebar();
      });
    }

      if (cartSidebarClose) {
        cartSidebarClose.addEventListener('click', hideCartSidebar);
      }

      if (cartSidebarOverlay) {
        cartSidebarOverlay.addEventListener('click', hideCartSidebar);
      }

      // Close cart on escape key
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && cartSidebar && cartSidebar.classList.contains('cart-sidebar-open')) {
          hideCartSidebar();
        }
      });
    });
  </script>

  <!-- Flash Messages Fixed Positioning Styles -->
  <style>
    .flash-messages-container-fixed {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 9999;
      max-width: 400px;
      pointer-events: none;
    }

    .flash-message-fixed {
      position: relative;
      margin-bottom: 1rem;
      border-radius: 12px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
      border: none;
      pointer-events: auto;
      animation: slideInRight 0.5s ease-out;
      backdrop-filter: blur(10px);
    }

    .flash-message-fixed.alert-success {
      background: linear-gradient(135deg, rgba(40, 167, 69, 0.95), rgba(25, 135, 84, 0.95));
      color: white;
      border-left: 4px solid #28a745;
    }

    .flash-message-fixed.alert-danger {
      background: linear-gradient(135deg, rgba(220, 53, 69, 0.95), rgba(200, 35, 51, 0.95));
      color: white;
      border-left: 4px solid #dc3545;
    }

    .flash-message-content {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 1rem 1.5rem;
    }

    .flash-message-content i {
      font-size: 1.2rem;
      flex-shrink: 0;
    }

    .flash-message-content span {
      flex: 1;
      margin: 0 1rem;
      font-weight: 500;
      line-height: 1.4;
    }

    .flash-message-fixed .btn-close {
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      width: 24px;
      height: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      border: none;
      color: white;
      font-size: 0.8rem;
      transition: all 0.3s ease;
      flex-shrink: 0;
    }

    .flash-message-fixed .btn-close:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: scale(1.1);
    }

    .flash-message-fixed .btn-close::before {
      content: '×';
      font-size: 1.2rem;
      font-weight: bold;
    }

    @keyframes slideInRight {
      from {
        transform: translateX(100%);
        opacity: 0;
      }
      to {
        transform: translateX(0);
        opacity: 1;
      }
    }

    @keyframes slideOutRight {
      from {
        transform: translateX(0);
        opacity: 1;
      }
      to {
        transform: translateX(100%);
        opacity: 0;
      }
    }

    .flash-message-fixed.fade {
      animation: slideOutRight 0.3s ease-in forwards;
    }

    /* Dark theme support */
    .dark-theme .flash-message-fixed.alert-success {
      background: linear-gradient(135deg, rgba(34, 197, 94, 0.95), rgba(22, 163, 74, 0.95));
    }

    .dark-theme .flash-message-fixed.alert-danger {
      background: linear-gradient(135deg, rgba(239, 68, 68, 0.95), rgba(220, 38, 38, 0.95));
    }

    /* Mobile responsiveness */
    @media (max-width: 768px) {
      .flash-messages-container-fixed {
        top: 10px;
        right: 10px;
        left: 10px;
        max-width: none;
      }

      .flash-message-content {
        padding: 0.75rem 1rem;
      }

      .flash-message-content span {
        font-size: 0.9rem;
        margin: 0 0.5rem;
      }
    }
  </style>

  <!-- Cart Sidebar Styles -->
  <style>
    .cart-item {
      display: flex;
      align-items: center;
      padding: 1.25rem;
      border: 2px solid #e9ecef;
      border-radius: 12px;
      margin-bottom: 1rem;
      background: #ffffff;
      transition: all 0.3s ease;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .cart-item:last-child {
      margin-bottom: 0;
    }

    .cart-item:hover {
      border-color: #3498db;
      box-shadow: 0 4px 15px rgba(52, 152, 219, 0.1);
      transform: translateY(-2px);
    }

    .cart-item-image {
      margin-right: 1rem;
      position: relative;
    }

    .cart-item-image img {
      width: 60px;
      height: 60px;
      object-fit: cover;
      border-radius: 10px;
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
      border: 2px solid #f8f9fa;
    }

    .cart-item-details {
      flex: 1;
      margin-right: 1rem;
    }

    .cart-item-title {
      font-size: 1rem;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 0.5rem;
      line-height: 1.3;
    }

    .cart-item-price {
      font-size: 1.1rem;
      font-weight: 700;
      color: #27ae60;
      margin-bottom: 0.5rem;
    }

    .cart-item-info {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .cart-item-type {
      font-size: 0.8rem;
      color: #3498db;
      font-weight: 600;
      background: #e3f2fd;
      padding: 0.25rem 0.75rem;
      border-radius: 12px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .cart-item-actions {
      display: flex;
      align-items: center;
    }

    .cart-remove-btn {
      background: linear-gradient(135deg, #e74c3c, #c0392b);
      color: white;
      border: none;
      width: 32px;
      height: 32px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 0.8rem;
      box-shadow: 0 2px 8px rgba(231, 76, 60, 0.3);
    }

    .cart-remove-btn:hover {
      background: linear-gradient(135deg, #c0392b, #a93226);
      transform: scale(1.05);
      box-shadow: 0 4px 15px rgba(231, 76, 60, 0.4);
    }

    .cart-notification {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0);
      background: white;
      border: 2px solid #ddd;
      border-radius: 16px;
      padding: 25px 35px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.25);
      z-index: 10000;
      transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
      min-width: 350px;
      text-align: center;
      opacity: 0;
      visibility: hidden;
      backdrop-filter: blur(10px);
    }

    .cart-notification.show {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
      visibility: visible;
    }

    .cart-notification-success {
      border-left: 4px solid #4caf50;
      background: linear-gradient(135deg, #ffffff 0%, #f8fff8 100%);
    }

    .cart-notification-error {
      border-left: 4px solid #f44336;
      background: linear-gradient(135deg, #ffffff 0%, #fff8f8 100%);
    }

    .cart-notification-info {
      border-left: 4px solid #2196f3;
      background: linear-gradient(135deg, #ffffff 0%, #f8faff 100%);
    }

    .cart-notification-content {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 12px;
      color: #333;
      font-weight: 500;
      position: relative;
    }

    .cart-notification-success .cart-notification-content i {
      color: #4caf50;
      font-size: 20px;
      animation: notificationIconPulse 0.6s ease-in-out;
    }

    .cart-notification-error .cart-notification-content i {
      color: #f44336;
      font-size: 20px;
      animation: notificationIconPulse 0.6s ease-in-out;
    }

    .cart-notification-info .cart-notification-content i {
      color: #2196f3;
      font-size: 20px;
      animation: notificationIconPulse 0.6s ease-in-out;
    }

    @keyframes notificationIconPulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.2); }
      100% { transform: scale(1); }
    }

    /* Dark theme support */
    .dark-theme .cart-notification {
      background: #1a1a1a;
      border-color: #333;
      box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
    }

    .dark-theme .cart-notification-content {
      color: #fff;
    }

    .dark-theme .cart-notification-success {
      background: linear-gradient(135deg, #1a1a1a 0%, #0f1a0f 100%);
    }

    .dark-theme .cart-notification-error {
      background: linear-gradient(135deg, #1a1a1a 0%, #1a0f0f 100%);
    }

    .dark-theme .cart-notification-info {
      background: linear-gradient(135deg, #1a1a1a 0%, #0f141a 100%);
    }

    .btn-cart-checkout:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    /* Professional User Dropdown Styles */
    .professional-user-dropdown {
      position: relative;
      display: flex;
      align-items: center;
    }

    .professional-dropdown-trigger {
      display: flex;
      align-items: center;
      background: transparent;
      border: none;
      padding: 0.75rem 1rem;
      border-radius: 12px;
      cursor: pointer;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
      outline: none;
      min-height: 48px;
    }

    .professional-dropdown-trigger:hover {
      background: rgba(255, 255, 255, 0.1);
      transform: translateY(-1px);
    }

    .professional-dropdown-trigger:focus {
      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);
    }

    .trigger-content {
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .user-avatar-container {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .user-avatar-icon {
      font-size: 2rem;
      color: #3b82f6;
      transition: all 0.3s ease;
    }

    .avatar-status-indicator {
      position: absolute;
      bottom: 2px;
      right: 2px;
      width: 8px;
      height: 8px;
      background: #10b981;
      border: 2px solid white;
      border-radius: 50%;
      animation: statusPulse 2s infinite;
    }

    @keyframes statusPulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.7; }
    }

    .user-info-container {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      min-width: 0;
    }

    .user-display-name {
      font-weight: 600;
      color: #1f2937;
      font-size: 0.9rem;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 120px;
    }

    .user-role-badge {
      font-size: 0.75rem;
      color: #6b7280;
      font-weight: 500;
      background: rgba(59, 130, 246, 0.1);
      padding: 0.125rem 0.5rem;
      border-radius: 6px;
      margin-top: 0.125rem;
    }

    .dropdown-chevron {
      display: flex;
      align-items: center;
      transition: transform 0.3s ease;
    }

    .dropdown-chevron i {
      font-size: 0.8rem;
      color: #6b7280;
    }

    .dropdown-open .dropdown-chevron {
      transform: rotate(180deg);
    }

    /* Professional Dropdown Menu */
    .professional-dropdown-menu {
      position: fixed;
      top: 0;
      left: 0;
      width: 320px;
      max-height: 90vh;
      background: white;
      border-radius: 16px;
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
      border: 1px solid rgba(0, 0, 0, 0.1);
      z-index: 999999;
      display: none;
      opacity: 0;
      transform: translateY(-20px) scale(0.95);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      backdrop-filter: blur(20px);
      overflow: hidden;
    }

    .professional-dropdown-menu.menu-visible {
      opacity: 1;
      transform: translateY(0) scale(1);
    }

    .professional-dropdown-backdrop {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.3);
      z-index: 999998;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
      backdrop-filter: blur(4px);
    }

    .professional-dropdown-backdrop.backdrop-visible {
      opacity: 1;
      visibility: visible;
    }

    .dropdown-menu-container {
      padding: 1rem;
      max-height: 90vh;
      overflow-y: auto;
      scrollbar-width: thin;
      scrollbar-color: #e5e7eb #f9fafb;
    }

    .dropdown-menu-container::-webkit-scrollbar {
      width: 6px;
    }

    .dropdown-menu-container::-webkit-scrollbar-track {
      background: #f9fafb;
      border-radius: 3px;
    }

    .dropdown-menu-container::-webkit-scrollbar-thumb {
      background: #e5e7eb;
      border-radius: 3px;
    }

    .dropdown-menu-container::-webkit-scrollbar-thumb:hover {
      background: #d1d5db;
    }

    /* User Header */
    .dropdown-user-header {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
      border-radius: 12px;
      margin-bottom: 1rem;
    }

    .user-header-avatar {
      font-size: 3rem;
      color: #3b82f6;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .user-header-info {
      flex: 1;
      min-width: 0;
    }

    .user-header-name {
      font-weight: 700;
      color: #1f2937;
      font-size: 1.1rem;
      margin-bottom: 0.25rem;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .user-header-email {
      color: #6b7280;
      font-size: 0.85rem;
      margin-bottom: 0.5rem;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .user-header-status {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .status-indicator {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: #10b981;
      animation: statusPulse 2s infinite;
    }

    .status-text {
      font-size: 0.75rem;
      color: #10b981;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    /* Menu Divider */
    .dropdown-menu-divider {
      height: 1px;
      background: linear-gradient(to right, transparent, #e5e7eb, transparent);
      margin: 1rem 0;
    }

    /* Navigation Items */
    .dropdown-navigation-items {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }

    .dropdown-nav-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      border-radius: 10px;
      color: #374151;
      text-decoration: none;
      transition: all 0.2s ease;
      position: relative;
      overflow: hidden;
    }

    .dropdown-nav-item:hover {
      background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
      color: #1f2937;
      transform: translateX(4px);
      text-decoration: none;
    }

    .dropdown-nav-item:focus {
      outline: none;
      background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
      color: #1e40af;
    }

    .nav-item-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
      border-radius: 10px;
      color: #3b82f6;
      font-size: 1rem;
      flex-shrink: 0;
      transition: all 0.2s ease;
    }

    .dropdown-nav-item:hover .nav-item-icon {
      background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
      color: white;
      transform: scale(1.05);
    }

    .nav-item-content {
      flex: 1;
      min-width: 0;
    }

    .nav-item-title {
      font-weight: 600;
      font-size: 0.9rem;
      display: block;
      margin-bottom: 0.125rem;
    }

    .nav-item-subtitle {
      font-size: 0.75rem;
      color: #6b7280;
      display: block;
    }

    .nav-item-arrow {
      color: #9ca3af;
      font-size: 0.8rem;
      transition: all 0.2s ease;
      opacity: 0;
      transform: translateX(-10px);
    }

    .dropdown-nav-item:hover .nav-item-arrow {
      opacity: 1;
      transform: translateX(0);
      color: #3b82f6;
    }

    /* Logout Section */
    .dropdown-logout-section {
      margin-top: 0.5rem;
    }

    .dropdown-logout-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      border-radius: 10px;
      color: #dc2626;
      text-decoration: none;
      transition: all 0.2s ease;
      background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
      border: 1px solid #fecaca;
    }

    .dropdown-logout-item:hover {
      background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
      color: white;
      text-decoration: none;
      transform: translateY(-1px);
      box-shadow: 0 4px 15px rgba(220, 38, 38, 0.3);
    }

    .logout-item-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: rgba(220, 38, 38, 0.1);
      border-radius: 10px;
      color: #dc2626;
      font-size: 1rem;
      flex-shrink: 0;
      transition: all 0.2s ease;
    }

    .dropdown-logout-item:hover .logout-item-icon {
      background: rgba(255, 255, 255, 0.2);
      color: white;
    }

    .logout-item-content {
      flex: 1;
      min-width: 0;
    }

    .logout-item-title {
      font-weight: 600;
      font-size: 0.9rem;
      display: block;
      margin-bottom: 0.125rem;
    }

    .logout-item-subtitle {
      font-size: 0.75rem;
      opacity: 0.8;
      display: block;
    }

    /* Dark Theme Support */
    .dark-theme .professional-dropdown-trigger:hover {
      background: rgba(255, 255, 255, 0.05);
    }

    .dark-theme .user-display-name {
      color: #f9fafb;
    }

    .dark-theme .user-role-badge {
      background: rgba(59, 130, 246, 0.2);
      color: #93c5fd;
    }

    .dark-theme .professional-dropdown-menu {
      background: #1f2937;
      border-color: #374151;
    }

    .dark-theme .dropdown-user-header {
      background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
    }

    .dark-theme .user-header-name {
      color: #f9fafb;
    }

    .dark-theme .user-header-email {
      color: #9ca3af;
    }

    .dark-theme .dropdown-menu-divider {
      background: linear-gradient(to right, transparent, #4b5563, transparent);
    }

    .dark-theme .dropdown-nav-item {
      color: #d1d5db;
    }

    .dark-theme .dropdown-nav-item:hover {
      background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
      color: #f9fafb;
    }

    .dark-theme .dropdown-nav-item:focus {
      background: linear-gradient(135deg, #1e3a8a 0%, #1d4ed8 100%);
      color: #dbeafe;
    }

    .dark-theme .nav-item-icon {
      background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
      color: #60a5fa;
    }

    .dark-theme .dropdown-nav-item:hover .nav-item-icon {
      background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
      color: white;
    }

    .dark-theme .nav-item-subtitle {
      color: #9ca3af;
    }

    .dark-theme .dropdown-logout-item {
      background: linear-gradient(135deg, #431c1c 0%, #5b2121 100%);
      border-color: #7c2d2d;
      color: #fca5a5;
    }

    .dark-theme .dropdown-logout-item:hover {
      background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
      color: white;
    }

    .dark-theme .logout-item-icon {
      background: rgba(220, 38, 38, 0.2);
      color: #fca5a5;
    }

    /* Mobile Responsive Styles */
    @media (max-width: 768px) {
      .professional-dropdown-trigger {
        padding: 0.5rem 0.75rem;
        min-height: 44px;
      }

      .trigger-content {
        gap: 0.5rem;
      }

      .user-info-container {
        display: none;
      }

      .professional-dropdown-menu {
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        width: 100% !important;
        height: 100% !important;
        max-height: 100vh !important;
        border-radius: 0 !important;
        transform: translateY(100%) !important;
      }

      .professional-dropdown-menu.menu-visible {
        transform: translateY(0) !important;
      }

      .dropdown-menu-container {
        padding: 1.5rem 1rem;
        height: 100%;
        display: flex;
        flex-direction: column;
      }

      .dropdown-user-header {
        margin-bottom: 1.5rem;
        padding: 1.5rem;
      }

      .dropdown-navigation-items {
        flex: 1;
        gap: 0.5rem;
      }

      .dropdown-nav-item {
        padding: 1.25rem;
        font-size: 1rem;
      }

      .nav-item-icon {
        width: 48px;
        height: 48px;
        font-size: 1.2rem;
      }

      .nav-item-title {
        font-size: 1rem;
      }

      .nav-item-subtitle {
        font-size: 0.85rem;
      }

      .dropdown-logout-item {
        padding: 1.25rem;
        margin-top: 1rem;
      }

      .logout-item-icon {
        width: 48px;
        height: 48px;
        font-size: 1.2rem;
      }

      /* Prevent body scroll when dropdown is open */
      body.professional-dropdown-active {
        overflow: hidden;
        position: fixed;
        width: 100%;
      }
    }

    /* Extra small devices */
    @media (max-width: 480px) {
      .user-avatar-icon {
        font-size: 1.75rem;
      }

      .dropdown-menu-container {
        padding: 1rem 0.75rem;
      }

      .dropdown-user-header {
        padding: 1rem;
        margin-bottom: 1rem;
      }

      .user-header-avatar {
        font-size: 2.5rem;
      }

      .dropdown-nav-item,
      .dropdown-logout-item {
        padding: 1rem;
      }
    }

    /* High contrast mode support */
    @media (prefers-contrast: high) {
      .professional-dropdown-menu {
        border: 2px solid;
      }

      .dropdown-nav-item:focus {
        outline: 2px solid;
      }
    }

    /* Reduced motion support */
    @media (prefers-reduced-motion: reduce) {
      .professional-dropdown-menu,
      .dropdown-chevron,
      .nav-item-icon,
      .nav-item-arrow,
      .avatar-status-indicator,
      .status-indicator {
        transition: none;
        animation: none;
      }
    }
  </style>

  <!-- Main Content -->