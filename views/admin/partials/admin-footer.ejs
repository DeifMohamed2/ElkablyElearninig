<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<!-- Admin JavaScript -->
<script>
// Theme Toggle Function
function toggleTheme() {
  try {
    const html = document.documentElement;
    const body = document.body;
    const themeIcon = document.getElementById('theme-icon');
    
    // Determine current theme more reliably
    let currentTheme = 'light'; // default
    if (html.classList.contains('dark-theme') || body.classList.contains('dark-theme')) {
      currentTheme = 'dark';
    } else if (html.classList.contains('light-theme') || body.classList.contains('light-theme')) {
      currentTheme = 'light';
    } else {
      // If no theme classes are present, check localStorage
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme) {
        currentTheme = savedTheme;
      }
    }
    
    // Toggle to the opposite theme
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    // Remove all theme classes first
    html.classList.remove('light-theme', 'dark-theme');
    body.classList.remove('light-theme', 'dark-theme');
    
    // Add the new theme classes
    html.classList.add(newTheme + '-theme');
    body.classList.add(newTheme + '-theme');
    
    // Update the theme icon
    if (themeIcon) {
      themeIcon.className = newTheme === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
    }
    
    // Save to localStorage
    localStorage.setItem('theme', newTheme);
    
    console.log('Theme toggled from', currentTheme, 'to', newTheme);
  } catch (error) {
    console.error('Error toggling theme:', error);
  }
}

// Mobile Sidebar Toggle
function toggleSidebar() {
  const sidebar = document.querySelector('.admin-sidebar');
  sidebar.classList.toggle('open');
}

// Initialize Admin Functions
document.addEventListener('DOMContentLoaded', function() {
  // Set initial theme icon - Enhanced version
  const html = document.documentElement;
  const body = document.body;
  const themeIcon = document.getElementById('theme-icon');
  
  if (themeIcon) {
    // Determine current theme more reliably
    let currentTheme = 'light'; // default
    if (html.classList.contains('dark-theme') || body.classList.contains('dark-theme')) {
      currentTheme = 'dark';
    } else if (html.classList.contains('light-theme') || body.classList.contains('light-theme')) {
      currentTheme = 'light';
    } else {
      // Check localStorage as fallback
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme) {
        currentTheme = savedTheme;
      }
    }
    
    // Set the appropriate icon
    themeIcon.className = currentTheme === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
    console.log('Theme icon initialized for:', currentTheme);
    
    // Ensure theme toggle is ready by adding a small delay
    setTimeout(() => {
      if (themeIcon) {
        const currentThemeCheck = html.classList.contains('dark-theme') || body.classList.contains('dark-theme') ? 'dark' : 'light';
        themeIcon.className = currentThemeCheck === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
      }
    }, 100);
  }
  
  // Mobile sidebar toggle
  const sidebarToggle = document.getElementById('sidebarToggle');
  if (sidebarToggle) {
    sidebarToggle.addEventListener('click', toggleSidebar);
  }
  
  // Close sidebar when clicking outside on mobile
  document.addEventListener('click', function(event) {
    const sidebar = document.querySelector('.admin-sidebar');
    const sidebarToggle = document.getElementById('sidebarToggle');
    
    if (window.innerWidth < 768 && 
        !sidebar.contains(event.target) && 
        !sidebarToggle.contains(event.target) && 
        sidebar.classList.contains('open')) {
      sidebar.classList.remove('open');
    }
  });
  
  // Auto-hide notifications after 5 seconds
  const notificationItems = document.querySelectorAll('.admin-notification-item');
  notificationItems.forEach(item => {
    setTimeout(() => {
      item.style.opacity = '0.6';
    }, 5000);
  });
});

// Admin-specific utility functions
window.adminUtils = {
  // Format numbers with commas
  formatNumber: function(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  },
  
  // Show loading state
  showLoading: function(element) {
    if (element) {
      element.innerHTML = '<div class="admin-loading"><i class="fas fa-spinner fa-spin"></i> Loading...</div>';
    }
  },
  
  // Show success message
  showSuccess: function(message) {
    // Implementation for success notifications
    console.log('Success:', message);
  },
  
  // Show error message
  showError: function(message) {
    // Implementation for error notifications
    console.error('Error:', message);
  }
};
if (process.env.NODE_ENV === 'production') {
  window.console.log = window.console.warn = window.console.error = window.console.info = () => {};
}

</script>

<!-- Additional JavaScript -->
<% if (typeof additionalJS !== 'undefined') { %>
  <% additionalJS.forEach(function(js) { %>
    <script src="<%= js %>"></script>
  <% }); %>
<% } %>

<% if (typeof inlineJS !== 'undefined') { %>
  <script>
    <%= inlineJS %>
  </script>
<% } %>

</body>
</html>
