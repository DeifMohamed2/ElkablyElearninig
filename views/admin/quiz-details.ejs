<%- include('./partials/admin-header', { pageCSS: 'quizzes' }) %>

<!-- MathLive for professional math input -->
<script src="https://unpkg.com/mathlive"></script>

<!-- Admin Layout -->
<div class="admin-layout">
  
  <!-- Sidebar -->
  <%- include('./partials/admin-sidebar', { currentPage: currentPage }) %>
  
  <!-- Main Content -->
  <main class="admin-main">
    
    <!-- Top Bar -->
    <%- include('./partials/admin-topbar', { 
        breadcrumb: 'Quiz Management',
        breadcrumbSubtitle: 'Manage quiz settings and review participants'
    }) %>
    
    <!-- Content -->
    <div class="admin-content">
  <!-- Enhanced Quiz Details Header -->
  <div class="enhanced-quiz-header">
    <div class="enhanced-quiz-header-content">
      <div class="enhanced-quiz-header-main">
        <div class="enhanced-quiz-header-top">
          <a href="/admin/quizzes" class="enhanced-back-button">
            <i class="fas fa-arrow-left"></i>
            <span>Back to Quizzes</span>
          </a>
          <div class="enhanced-quiz-status">
            <span class="enhanced-status-badge quiz-status-<%= quiz.status %>">
              <i class="fas fa-circle"></i>
              <%= quiz.status.charAt(0).toUpperCase() + quiz.status.slice(1) %>
            </span>
          </div>
        </div>
        <div class="enhanced-quiz-header-title">
          <h1 class="enhanced-quiz-title">
            <i class="fas fa-eye"></i>
            <%= quiz.title %>
          </h1>
          <p class="enhanced-quiz-subtitle">
            <span class="enhanced-quiz-code">
              <i class="fas fa-hashtag"></i>
              <%= quiz.code %>
            </span>
            <span class="enhanced-quiz-description">
              <%= quiz.description || 'No description provided' %>
            </span>
          </p>
        </div>
      </div>
      <div class="enhanced-quiz-header-actions">
        <div class="enhanced-quiz-stats">
          <div class="enhanced-stat-item">
            <div class="enhanced-stat-icon">
              <i class="fas fa-question-circle"></i>
            </div>
            <div class="enhanced-stat-content">
              <div class="enhanced-stat-number"><%= quiz.selectedQuestions.length || 0 %></div>
              <div class="enhanced-stat-label">Questions</div>
            </div>
          </div>
          <div class="enhanced-stat-item">
            <div class="enhanced-stat-icon">
              <i class="fas fa-clock"></i>
            </div>
            <div class="enhanced-stat-content">
              <div class="enhanced-stat-number"><%= quiz.duration %></div>
              <div class="enhanced-stat-label">Minutes</div>
            </div>
          </div>
          <div class="enhanced-stat-item">
            <div class="enhanced-stat-icon">
              <i class="fas fa-trophy"></i>
            </div>
            <div class="enhanced-stat-content">
              <div class="enhanced-stat-number"><%= quiz.passingScore %>%</div>
              <div class="enhanced-stat-label">Passing</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>


  <!-- Quiz Details Content -->
  <div class="row">
    <!-- Main Content -->
    <div class="col-lg-8">
      <!-- Quiz Information -->
      <div class="quiz-form-section">
        <div class="quiz-form-section-title">
          <i class="fas fa-info-circle"></i>
          Quiz Information
        </div>

        <div class="row">
          <div class="col-md-6">
            <div class="quiz-form-group">
              <label class="quiz-form-label">Description</label>
              <div class="quiz-form-control" style="background: #f8fafc; border: 1px solid #e2e8f0;">
                <%= quiz.description %>
              </div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="quiz-form-group">
              <label class="quiz-form-label">Instructions</label>
              <div class="quiz-form-control" style="background: #f8fafc; border: 1px solid #e2e8f0; min-height: 100px;">
                <%= quiz.instructions || 'No instructions provided' %>
              </div>
            </div>
          </div>
        </div>


        <!-- Quiz Settings -->
        <div class="row">
          <div class="col-md-6">
            <div class="quiz-form-group">
              <label class="quiz-form-label">Difficulty Level</label>
              <div class="quiz-form-control" style="background: #f8fafc; border: 1px solid #e2e8f0;">
                <span class="admin-badge admin-badge-<%= quiz.difficulty === 'easy' ? 'success' : quiz.difficulty === 'medium' ? 'warning' : 'danger' %>">
                  <%= quiz.difficulty.toUpperCase() %>
                </span>
              </div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="quiz-form-group">
              <label class="quiz-form-label">Max Attempts</label>
              <div class="quiz-form-control" style="background: #f8fafc; border: 1px solid #e2e8f0;">
                <%= quiz.maxAttempts %>
              </div>
            </div>
          </div>
        </div>

        <!-- Quiz Options -->
        <div class="quiz-form-group">
          <label class="quiz-form-label">Quiz Options</label>
          <div class="row">
            <div class="col-md-6">
              <div class="quiz-form-check">
                <input type="checkbox" class="quiz-form-check-input" <%= quiz.shuffleQuestions ? 'checked' : '' %> disabled>
                <label class="quiz-form-check-label">Shuffle Questions</label>
              </div>
              <div class="quiz-form-check">
                <input type="checkbox" class="quiz-form-check-input" <%= quiz.shuffleOptions ? 'checked' : '' %> disabled>
                <label class="quiz-form-check-label">Shuffle Answer Options</label>
              </div>
            </div>
            <div class="col-md-6">
              <div class="quiz-form-check">
                <input type="checkbox" class="quiz-form-check-input" <%= quiz.showCorrectAnswers ? 'checked' : '' %> disabled>
                <label class="quiz-form-check-label">Show Correct Answers</label>
              </div>
              <div class="quiz-form-check">
                <input type="checkbox" class="quiz-form-check-input" <%= quiz.showResults ? 'checked' : '' %> disabled>
                <label class="quiz-form-check-label">Show Results Immediately</label>
              </div>
            </div>
          </div>
        </div>

        <!-- Tags -->
        <% if (quiz.tags && quiz.tags.length > 0) { %>
          <div class="quiz-form-group">
            <label class="quiz-form-label">Tags</label>
            <div class="quiz-tags">
              <% quiz.tags.forEach(tag => { %>
                <span class="quiz-tag"><%= tag %></span>
              <% }) %>
            </div>
          </div>
        <% } %>
      </div>

      <!-- Enhanced Selected Questions -->
      <div class="quiz-form-section">
        <div class="quiz-form-section-title d-flex justify-content-between align-items-center">
          <div>
            <i class="fas fa-list-check"></i>
            Selected Questions (<%= quiz.selectedQuestions.length %>)
          </div>
          <div class="admin-actions">
            <button class="admin-action-btn" onclick="exportQuestions()">
              <i class="fas fa-download"></i>
              Export
            </button>
            <button class="admin-action-btn" onclick="refreshQuestions()">
              <i class="fas fa-sync"></i>
              Refresh
            </button>
          </div>
        </div>

        <% if (quiz.selectedQuestions && quiz.selectedQuestions.length > 0) { %>
          <div class="enhanced-question-list scrollable-questions">
            <% quiz.selectedQuestions.forEach((selectedQ, index) => { %>
              <% const question = selectedQ.question; %>
              <div class="enhanced-question-item">
                <div class="enhanced-question-header">
                  <div class="enhanced-question-number">
                    <span class="question-number-badge"><%= index + 1 %></span>
                  </div>
                  <div class="enhanced-question-actions">
                    <button class="admin-action-btn primary" onclick="previewQuestion('<%= question._id %>')">
                      <i class="fas fa-eye"></i>
                      Preview
                    </button>
                  </div>
                </div>
                <div class="enhanced-question-content">
                  <div class="enhanced-question-title">
                    <%= question.questionText.length > 100 ? question.questionText.substring(0, 100) + '...' : question.questionText %>
                  </div>
                  <div class="enhanced-question-meta">
                    <div class="enhanced-meta-item">
                      <i class="fas fa-signal"></i>
                      <span class="admin-badge admin-badge-<%= question.difficulty === 'Easy' ? 'success' : question.difficulty === 'Medium' ? 'warning' : 'danger' %>">
                        <%= question.difficulty %>
                      </span>
                    </div>
                    <div class="enhanced-meta-item">
                      <i class="fas fa-tag"></i>
                      <span class="admin-badge admin-badge-info">
                        <%= question.questionType %>
                      </span>
                    </div>
                    <div class="enhanced-meta-item">
                      <i class="fas fa-star"></i>
                      <span class="admin-badge admin-badge-primary">
                        <%= selectedQ.points || question.points %> pts
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            <% }) %>
          </div>
        <% } else { %>
          <div class="admin-empty-state" style="text-align: center; padding: 40px 20px; background: var(--admin-card-light); border: 2px solid var(--admin-border-light); border-radius: 12px; margin: 20px 0;">
            <div class="admin-empty-icon" style="width: 60px; height: 60px; background: linear-gradient(135deg, var(--admin-primary), #dc2626); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin: 0 auto 16px; color: #ffffff; font-size: 24px;">
              <i class="fas fa-exclamation-triangle"></i>
            </div>
            <h5 style="color: var(--admin-text-light); margin-bottom: 8px;">No Questions Selected</h5>
            <p style="color: #64748b; margin-bottom: 20px;">This quiz doesn't have any questions yet.</p>
            <a href="/admin/quizzes/<%= quiz._id %>/edit" class="admin-action-btn primary">
              <i class="fas fa-plus"></i>
              Add Questions
            </a>
          </div>
        <% } %>
      </div>
    </div>

    <!-- Sidebar -->
    <div class="col-lg-4">
      <!-- Question Bank Info -->
      <div class="question-bank-selection">
        <div class="question-bank-selection-title">
          <i class="fas fa-database"></i>
          Question Bank
        </div>
        <div class="bank-selection-card">
          <div class="bank-selection-title"><%= quiz.questionBank?.name || 'No Bank' %></div>
          <div class="bank-selection-code"><%= quiz.questionBank?.bankCode || 'N/A' %></div>
          <div class="bank-selection-stats">
            <div class="bank-selection-stat">
              <i class="fas fa-question-circle"></i>
              <span><%= quiz.questionBank?.totalQuestions || 0 %> questions</span>
            </div>
          </div>
        </div>
      </div>


      <!-- Enhanced Quiz Metadata -->
      <div class="question-bank-selection" style="margin-top: 24px;">
        <div class="question-bank-selection-title">
          <i class="fas fa-info-circle"></i>
          Quiz Metadata
        </div>
        <div class="bank-selection-card" style="padding: 24px;">
          <div class="row">
            <div class="col-md-6 mb-3">
              <div class="metadata-item">
                <div class="metadata-icon">
                  <i class="fas fa-user-circle"></i>
                </div>
                <div class="metadata-content">
                  <div class="metadata-label">Created by</div>
                  <div class="metadata-value"><%= quiz.createdBy?.userName || 'Unknown' %></div>
                </div>
              </div>
            </div>
            <div class="col-md-6 mb-3">
              <div class="metadata-item">
                <div class="metadata-icon">
                  <i class="fas fa-calendar-alt"></i>
                </div>
                <div class="metadata-content">
                  <div class="metadata-label">Created Date</div>
                  <div class="metadata-value"><%= new Date(quiz.createdAt).toLocaleDateString() %></div>
                </div>
              </div>
            </div>
            <% if (quiz.lastModifiedBy) { %>
              <div class="col-md-6 mb-3">
                <div class="metadata-item">
                  <div class="metadata-icon">
                    <i class="fas fa-user-edit"></i>
                  </div>
                  <div class="metadata-content">
                    <div class="metadata-label">Last Modified by</div>
                    <div class="metadata-value"><%= quiz.lastModifiedBy?.userName || 'Unknown' %></div>
                  </div>
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <div class="metadata-item">
                  <div class="metadata-icon">
                    <i class="fas fa-clock"></i>
                  </div>
                  <div class="metadata-content">
                    <div class="metadata-label">Last Modified</div>
                    <div class="metadata-value"><%= new Date(quiz.updatedAt).toLocaleDateString() %></div>
                  </div>
                </div>
              </div>
            <% } %>
            <div class="col-md-6 mb-3">
              <div class="metadata-item">
                <div class="metadata-icon">
                  <i class="fas fa-hashtag"></i>
                </div>
                <div class="metadata-content">
                  <div class="metadata-label">Quiz Code</div>
                  <div class="metadata-value"><%= quiz.code %></div>
                </div>
              </div>
            </div>
            <div class="col-md-6 mb-3">
              <div class="metadata-item">
                <div class="metadata-icon">
                  <i class="fas fa-layer-group"></i>
                </div>
                <div class="metadata-content">
                  <div class="metadata-label">Question Bank</div>
                  <div class="metadata-value"><%= quiz.questionBank?.name || 'No Bank' %></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Quiz Actions -->
      <div class="question-bank-selection" style="margin-top: 24px;">
        <div class="question-bank-selection-title">
          <i class="fas fa-cogs"></i>
          Quick Actions
        </div>
        <div class="d-grid gap-2">
          <a href="/admin/quizzes/<%= quiz._id %>/edit" class="btn btn-primary">
            <i class="fas fa-edit"></i>
            Edit Quiz
          </a>
          <% const statusClass = quiz.status === 'active' ? 'warning' : 'success'; %>
          <% const newStatus = quiz.status === 'active' ? 'draft' : 'active'; %>
          <% const statusIcon = quiz.status === 'active' ? 'pause' : 'play'; %>
          <% const statusText = quiz.status === 'active' ? 'Deactivate' : 'Activate'; %>
          <button class="btn btn-<%= statusClass %>" 
                  onclick="updateQuizStatus('<%= quiz._id %>', '<%= newStatus %>')">
            <i class="fas fa-<%= statusIcon %>"></i>
            <%= statusText %> Quiz
          </button>
          <div class="btn-group" role="group">
            <button class="btn btn-warning" onclick="deleteQuiz('<%= quiz._id %>', false)">
              <i class="fas fa-trash"></i>
              Move to Trash
            </button>
            <button class="btn btn-danger" onclick="deleteQuiz('<%= quiz._id %>', true)">
              <i class="fas fa-trash-alt"></i>
              Delete Permanently
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Participants & Rankings -->
  <div class="quiz-form-section" style="margin-top: 24px;">
    <div class="quiz-form-section-title d-flex justify-content-between align-items-center">
      <div>
        <i class="fas fa-users"></i>
        Participants (<%= participantsCount || 0 %>)
      </div>
      <div class="admin-actions">
        <button class="admin-action-btn" onclick="exportResults()">
          <i class="fas fa-download"></i>
          Export Results
        </button>
        <button class="admin-action-btn" onclick="refreshParticipants()">
          <i class="fas fa-sync"></i>
          Refresh
        </button>
      </div>
    </div>

    <% if (participants && participants.length > 0) { %>
      <div class="admin-table-container">
        <table class="admin-table">
          <thead>
            <tr>
              <th>#</th>
              <th>Student</th>
              <th>Email</th>
              <th>Best Score</th>
              <th>Last Score</th>
              <th>Attempts</th>
              <th>Time Spent</th>
              <th>Last Attempt</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% participants.forEach((p, idx) => { %>
              <tr>
                <td><%= idx + 1 %></td>
                <td><%= p.name %></td>
                <td><%= p.email || '-' %></td>
                <td>
                  <span class="admin-badge admin-badge-<%= p.bestScore >= quiz.passingScore ? 'success' : 'danger' %>">
                    <%= p.bestScore %>%
                  </span>
                </td>
                <td><%= p.lastScore !== null ? p.lastScore + '%' : '-' %></td>
                <td><%= p.attemptsCount %></td>
                <td><%= Math.floor((p.timeSpent || 0) / 60) %>m <%= (p.timeSpent || 0) % 60 %>s</td>
                <td><%= p.completedAt ? new Date(p.completedAt).toLocaleString() : '-' %></td>
                <td>
                  <div class="admin-actions">
                    <a class="admin-action-btn primary" href="/admin/quizzes/<%= quiz._id %>/review/<%= p.studentId %>">
                      <i class="fas fa-eye"></i> Review
                    </a>
                    <button class="admin-action-btn" onclick="resetStudentQuiz('<%= quiz._id %>', '<%= p.studentId %>', '<%= p.name %>')" title="Reset student's quiz attempts">
                      <i class="fas fa-redo"></i> Reset
                    </button>
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    <% } else { %>
      <div class="alert alert-info">
        <i class="fas fa-info-circle"></i>
        No participants yet.
      </div>
    <% } %>
  </div>
</div>

<!-- Enhanced Question Preview Modal -->
<div class="modal fade question-preview-modal" id="questionPreviewModal" tabindex="-1" aria-labelledby="questionPreviewModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content admin-modal-content">
      <div class="modal-header admin-modal-header">
        <h5 class="modal-title" id="questionPreviewModalLabel">
          <i class="fas fa-eye"></i>
          Question Preview
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body admin-modal-body">
        <div id="questionPreviewContent" class="enhanced-question-preview-content">
          <!-- Question preview will be loaded here -->
        </div>
      </div>
      <div class="modal-footer admin-modal-footer">
        <button type="button" class="admin-action-btn" data-bs-dismiss="modal">
          <i class="fas fa-times"></i>
          Close
        </button>
        <button type="button" class="admin-action-btn primary" onclick="printQuestionPreview()">
          <i class="fas fa-print"></i>
          Print
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteQuizModal" tabindex="-1" aria-labelledby="deleteQuizModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content admin-modal-content">
      <div class="modal-header admin-modal-header">
        <h5 class="modal-title" id="deleteQuizModalLabel">
          <i class="fas fa-exclamation-triangle text-danger"></i>
          Confirm Delete
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body admin-modal-body">
        <p>Are you sure you want to delete this quiz? This action cannot be undone.</p>
        <div class="alert alert-warning">
          <i class="fas fa-exclamation-triangle"></i>
          <strong>Warning:</strong> This will permanently delete the quiz and all associated data.
        </div>
      </div>
      <div class="modal-footer admin-modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
          <i class="fas fa-trash"></i>
          Delete Quiz
        </button>
      </div>
    </div>
  </div>
</div>

<script>
// Preview Question
async function previewQuestion(questionId) {
  try {
    const response = await fetch(`/admin/quizzes/api/questions/${questionId}/preview`);
    const data = await response.json();
    
    if (data.success) {
      displayQuestionPreview(data.question);
      const modal = new bootstrap.Modal(document.getElementById('questionPreviewModal'));
      modal.show();
    } else {
      showNotification('Failed to load question preview', 'error');
    }
  } catch (error) {
    console.error('Error loading question preview:', error);
    showNotification('Error loading question preview', 'error');
  }
}

// Enhanced Display Question Preview with MathLive support and Written Questions handling
function displayQuestionPreview(question) {
  const content = document.getElementById('questionPreviewContent');
  
  // Render math in question text
  let questionTextHtml = '';
  if (question.questionText && question.questionText.includes('\\')) {
    // If it contains LaTeX, render it with MathLive
    questionTextHtml = `
      <math-field readonly 
        style="width: 100%; min-height: 60px; font-size: 18px; border: none; background: transparent; padding: 12px;"
        class="preview-math-field">
        ${question.questionText}
      </math-field>
    `;
  } else {
    questionTextHtml = `<div class="question-text-content">${question.questionText}</div>`;
  }
  
  let optionsHtml = '';
  let correctAnswersHtml = '';
  
  // Handle different question types
  if (question.questionType === 'Written') {
    // Handle Written Questions
    if (question.correctAnswers && question.correctAnswers.length > 0) {
      correctAnswersHtml = `
        <div class="enhanced-question-preview-answers">
          <div class="answers-title">
            <i class="fas fa-check-circle"></i>
            Correct Answers
          </div>
          <div class="answers-list">
            ${question.correctAnswers.map((answer, index) => {
              let answerTextHtml = '';
              if (answer.text && answer.text.includes('\\')) {
                // Render math for answer text
                answerTextHtml = `
                  <math-field readonly 
                    style="width: 100%; min-height: 40px; font-size: 16px; border: none; background: transparent; padding: 8px;"
                    class="preview-math-field answer-math-field">
                    ${answer.text}
                  </math-field>
                `;
              } else {
                answerTextHtml = `<span class="answer-text-content">${answer.text}</span>`;
              }
              
              return `
                <div class="enhanced-answer-item">
                  <div class="answer-number">${index + 1}</div>
                  <div class="answer-content">
                    ${answerTextHtml}
                  </div>
                  <div class="answer-mandatory">
                    ${answer.isMandatory ? '<span class="mandatory-badge">Required</span>' : '<span class="optional-badge">Optional</span>'}
                  </div>
                </div>
              `;
            }).join('')}
          </div>
          <div class="answer-multiplicity-info">
            <i class="fas fa-info-circle"></i>
            Answer Type: ${question.answerMultiplicity === 'single' ? 'Single Answer' : 'Multiple Answers'}
          </div>
        </div>
      `;
    }
  } else {
    // Handle MCQ and True/False Questions
    if (question.options && question.options.length > 0) {
      optionsHtml = `
        <div class="enhanced-question-preview-options">
          <div class="options-title">
            <i class="fas fa-list"></i>
            Answer Options
          </div>
          <div class="options-list">
            ${question.options.map((option, index) => {
              let optionTextHtml = '';
              if (option.text && option.text.includes('\\')) {
                // Render math for option text
                optionTextHtml = `
                  <math-field readonly 
                    style="width: 100%; min-height: 40px; font-size: 16px; border: none; background: transparent; padding: 8px;"
                    class="preview-math-field option-math-field">
                    ${option.text}
                  </math-field>
                `;
              } else {
                optionTextHtml = `<span class="option-text-content">${option.text}</span>`;
              }
              
              return `
                <div class="enhanced-option-item ${option.isCorrect ? 'correct' : ''}">
                  <div class="option-letter">${String.fromCharCode(65 + index)}</div>
                  <div class="option-content">
                    ${optionTextHtml}
                  </div>
                  ${option.isCorrect ? '<div class="correct-indicator"><i class="fas fa-check"></i></div>' : ''}
                </div>
              `;
            }).join('')}
          </div>
        </div>
      `;
    }
  }
  
  let explanationHtml = '';
  if (question.explanation) {
    let explanationTextHtml = '';
    if (question.explanation.includes('\\')) {
      // Render math for explanation
      explanationTextHtml = `
        <math-field readonly 
          style="width: 100%; min-height: 40px; font-size: 16px; border: none; background: transparent; padding: 8px;"
          class="preview-math-field explanation-math-field">
          ${question.explanation}
        </math-field>
      `;
    } else {
      explanationTextHtml = `<div class="explanation-text-content">${question.explanation}</div>`;
    }
    
    explanationHtml = `
      <div class="enhanced-question-preview-explanation">
        <div class="explanation-title">
          <i class="fas fa-lightbulb"></i>
          Explanation
        </div>
        <div class="explanation-content">
          ${explanationTextHtml}
        </div>
      </div>
    `;
  }
  
  content.innerHTML = `
    <div class="enhanced-question-preview-header">
      <div class="question-meta-badges">
        <span class="admin-badge admin-badge-${question.difficulty === 'Easy' ? 'success' : question.difficulty === 'Medium' ? 'warning' : 'danger'}">
          <i class="fas fa-signal"></i> ${question.difficulty}
        </span>
        <span class="admin-badge admin-badge-info">
          <i class="fas fa-tag"></i> ${question.questionType}
        </span>
        <span class="admin-badge admin-badge-primary">
          <i class="fas fa-star"></i> ${question.points} points
        </span>
      </div>
    </div>
    <div class="enhanced-question-preview-text">
      ${questionTextHtml}
    </div>
    ${optionsHtml}
    ${correctAnswersHtml}
    ${explanationHtml}
  `;
}

// Update Quiz Status
async function updateQuizStatus(quizId, newStatus) {
  try {
    const response = await fetch(`/admin/quizzes/${quizId}/status`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ status: newStatus })
    });
    
    const data = await response.json();
    
    if (data.success) {
      showNotification('Quiz status updated successfully', 'success');
      setTimeout(() => {
        location.reload();
      }, 1000);
    } else {
      showNotification('Failed to update quiz status', 'error');
    }
  } catch (error) {
    console.error('Error updating quiz status:', error);
    showNotification('Error updating quiz status', 'error');
  }
}

// Delete Quiz (with immediate option)
function deleteQuiz(quizId, immediate = false) {
  const modal = new bootstrap.Modal(document.getElementById('deleteQuizModal'));
  const confirmBtn = document.getElementById('confirmDeleteBtn');
  const modalBody = document.querySelector('#deleteQuizModal .modal-body');
  const modalTitle = document.querySelector('#deleteQuizModal .modal-title');
  
  // Update modal content based on delete type
  if (immediate) {
    modalTitle.innerHTML = '<i class="fas fa-exclamation-triangle text-danger"></i> Permanent Delete';
    modalBody.innerHTML = `
      <p>Are you sure you want to permanently delete this quiz? This action cannot be undone.</p>
      <div class="alert alert-danger">
        <i class="fas fa-exclamation-triangle"></i>
        <strong>Warning:</strong> This will permanently delete the quiz and all associated data including student attempts and results.
      </div>
    `;
    confirmBtn.className = 'btn btn-danger';
    confirmBtn.innerHTML = '<i class="fas fa-trash-alt"></i> Delete Permanently';
  } else {
    modalTitle.innerHTML = '<i class="fas fa-trash text-warning"></i> Move to Trash';
    modalBody.innerHTML = `
      <p>Are you sure you want to move this quiz to trash? You can restore it later if needed.</p>
      <div class="alert alert-info">
        <i class="fas fa-info-circle"></i>
        <strong>Note:</strong> This will move the quiz to trash. It won't be permanently deleted and can be restored later.
      </div>
    `;
    confirmBtn.className = 'btn btn-warning';
    confirmBtn.innerHTML = '<i class="fas fa-trash"></i> Move to Trash';
  }
  
  confirmBtn.onclick = async function() {
    try {
      // Show loading state
      const originalText = confirmBtn.innerHTML;
      const loadingText = immediate ? 'Deleting permanently...' : 'Moving to trash...';
      confirmBtn.innerHTML = `<i class="fas fa-spinner fa-spin"></i> ${loadingText}`;
      confirmBtn.disabled = true;
      
      // Make DELETE request
      const response = await fetch(`/admin/quizzes/${quizId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify({
          immediate: immediate,
          reason: immediate ? 'Permanently deleted from quiz details' : 'Moved to trash from quiz details'
        })
      });
      
      const data = await response.json();
      
      if (data.success || response.ok) {
        const successMessage = immediate ? 'Quiz permanently deleted successfully!' : 'Quiz moved to trash successfully!';
        showNotification(successMessage, 'success');
        // Close modal
        modal.hide();
        // Redirect to quizzes list
        setTimeout(() => {
          window.location.href = '/admin/quizzes';
        }, 1500);
      } else {
        throw new Error(data.message || 'Failed to delete quiz');
      }
    } catch (error) {
      console.error('Delete quiz error:', error);
      showNotification('Failed to delete quiz: ' + error.message, 'error');
      
      // Reset button state
      confirmBtn.innerHTML = originalText;
      confirmBtn.disabled = false;
    }
  };
  
  modal.show();
}

// Reset Student Quiz Attempts
async function resetStudentQuiz(quizId, studentId, studentName) {
  if (!confirm(`Are you sure you want to reset all quiz attempts for ${studentName}? This will allow them to retake the quiz from the beginning.`)) {
    return;
  }

  try {
    const response = await fetch(`/admin/quizzes/${quizId}/reset-student/${studentId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    });

    const data = await response.json();

    if (data.success) {
      showNotification(`Quiz attempts reset successfully for ${studentName}`, 'success');
      setTimeout(() => {
        location.reload();
      }, 1500);
    } else {
      showNotification('Failed to reset quiz attempts: ' + (data.message || 'Unknown error'), 'error');
    }
  } catch (error) {
    console.error('Error resetting quiz attempts:', error);
    showNotification('Error resetting quiz attempts', 'error');
  }
}

// Export Results
function exportResults() {
  showNotification('Export feature coming soon!', 'info');
}

// Refresh Participants
function refreshParticipants() {
  location.reload();
}

// Export Questions
function exportQuestions() {
  showNotification('Export questions feature coming soon!', 'info');
}

// Refresh Questions
function refreshQuestions() {
  location.reload();
}

// Print Question Preview
function printQuestionPreview() {
  const printContent = document.getElementById('questionPreviewContent').innerHTML;
  const printWindow = window.open('', '_blank');
  printWindow.document.write(`
    <html>
      <head>
        <title>Question Preview</title>
        <style>
          body { font-family: Arial, sans-serif; padding: 20px; }
          .enhanced-question-preview-header { margin-bottom: 20px; }
          .question-meta-badges { display: flex; gap: 10px; margin-bottom: 15px; }
          .admin-badge { padding: 4px 8px; border-radius: 4px; font-size: 12px; }
          .admin-badge-success { background: #d4edda; color: #155724; }
          .admin-badge-warning { background: #fff3cd; color: #856404; }
          .admin-badge-danger { background: #f8d7da; color: #721c24; }
          .admin-badge-info { background: #d1ecf1; color: #0c5460; }
          .admin-badge-primary { background: #cce5ff; color: #004085; }
          .enhanced-question-preview-text { margin-bottom: 20px; font-size: 16px; }
          .enhanced-question-preview-options { margin-bottom: 20px; }
          .options-title { font-weight: bold; margin-bottom: 10px; }
          .enhanced-option-item { display: flex; align-items: center; margin-bottom: 8px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; }
          .option-letter { width: 30px; height: 30px; background: #f8f9fa; border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 10px; font-weight: bold; }
          .option-content { flex: 1; }
          .correct-indicator { color: #28a745; margin-left: 10px; }
          .enhanced-question-preview-explanation { background: #f8f9fa; padding: 15px; border-radius: 4px; }
          .explanation-title { font-weight: bold; margin-bottom: 10px; }
          .enhanced-question-preview-answers { background: #f8fafc; border: 2px solid #e2e8f0; border-radius: 12px; padding: 20px; margin: 20px 0; }
          .answers-title { font-weight: bold; margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid #e2e8f0; }
          .enhanced-answer-item { display: flex; align-items: flex-start; gap: 12px; padding: 16px; background: #ffffff; border: 2px solid #e2e8f0; border-radius: 10px; margin-bottom: 12px; }
          .answer-number { width: 32px; height: 32px; background: #b80101; color: #ffffff; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-weight: bold; font-size: 14px; flex-shrink: 0; }
          .answer-content { flex: 1; font-size: 16px; line-height: 1.5; }
          .answer-mandatory { flex-shrink: 0; }
          .mandatory-badge { background: #10b981; color: #ffffff; padding: 4px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; text-transform: uppercase; }
          .optional-badge { background: #6b7280; color: #ffffff; padding: 4px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; text-transform: uppercase; }
          .answer-multiplicity-info { margin-top: 16px; padding: 12px 16px; background: rgba(184, 1, 1, 0.05); border: 1px solid rgba(184, 1, 1, 0.2); border-radius: 8px; font-size: 14px; }
        </style>
      </head>
      <body>
        ${printContent}
      </body>
    </html>
  `);
  printWindow.document.close();
  printWindow.print();
}

// Notification function
function showNotification(message, type = 'info') {
  // Create notification element
  const notification = document.createElement('div');
  notification.className = `notification notification-${type}`;
  notification.innerHTML = `
    <div class="notification-content">
      <i class="fas fa-${type === 'error' ? 'exclamation-triangle' : type === 'success' ? 'check-circle' : 'info-circle'}"></i>
      <span>${message}</span>
    </div>
    <button class="notification-close" onclick="this.parentElement.remove()">
      <i class="fas fa-times"></i>
    </button>
  `;
  
  // Add to page
  document.body.appendChild(notification);
  
  // Auto remove after 5 seconds
  setTimeout(() => {
    if (notification.parentElement) {
      notification.remove();
    }
  }, 5000);
}
</script>

    </div>
    
  </main>
</div>

<%- include('./partials/admin-footer') %>
