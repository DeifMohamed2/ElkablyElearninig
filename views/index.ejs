<%- include('partials/header', { title: 'Home' }) %>

<!-- Floating Math Elements -->
<div class="floating-math-elements-professor" id="floatingMath">
  <div class="math-element-professor" data-equation="∂">∂</div>
  <div class="math-element-professor" data-equation="∇">∇</div>
  <div class="math-element-professor" data-equation="∫">∫</div>
  <div class="math-element-professor" data-equation="∑">∑</div>
  <div class="math-element-professor" data-equation="∏">∏</div>
  <div class="math-element-professor" data-equation="∞">∞</div>
  <div class="math-element-professor" data-equation="∃">∃</div>
  <div class="math-element-professor" data-equation="∀">∀</div>
  <div class="math-element-professor" data-equation="ℝ">ℝ</div>
  <div class="math-element-professor" data-equation="ℂ">ℂ</div>
</div>

<!-- Hero Section - Enhanced Mathematical Design -->
<section class="hero-section-professor" id="hero" data-aos="fade">
  <!-- Mathematical Background Canvas -->
  <div class="hero-mathematical-background">
    <canvas id="heroCanvas" class="hero-canvas-professor"></canvas>
    <div class="mathematical-grid-overlay"></div>
  </div>
  
  <!-- Advanced Particle System -->
  <div class="hero-particles-advanced" id="heroParticles"></div>
  
  <!-- Mathematical Equations Background -->
  <div class="mathematical-equations-background">
    <div class="equation-float eq-bg-1">∂f/∂x + ∂f/∂y = ∇f</div>
    <div class="equation-float eq-bg-2">∫₋∞^∞ e^(-x²) dx = √π</div>
    <div class="equation-float eq-bg-3">lim[x→∞] (1 + 1/x)^x = e</div>
    <div class="equation-float eq-bg-4">∑ₙ₌₁^∞ 1/n² = π²/6</div>
    <div class="equation-float eq-bg-5">e^(iπ) + 1 = 0</div>
  </div>
  
  <!-- Hero Glass Container -->
  <div class="hero-glass-container">
    <div class="container">
      <div class="row align-items-start min-vh-90">
        <!-- Left Content Column -->
        <div class="col-lg-6 col-xl-7">
          <div class="hero-content-glass" data-aos="fade-right" data-aos-delay="200">
            <!-- Academic Excellence Badge -->
            <!-- <div class="academic-excellence-badge" data-aos="fade-up" data-aos-delay="300">
              <div class="badge-glow-effect"></div>
              <i class="fas fa-medal badge-icon"></i>
              <span class="badge-text">Professor of Mathematics</span>
              <div class="badge-mathematical-accent">∏</div>
            </div> -->
            
            <!-- Main Hero Title -->
            <h1 class="hero-title-mathematical hero-title-compact" data-aos="fade-up" data-aos-delay="400">
              <span class="title-line title-line-1">Mr. Kably</span>
              <span class="title-line title-line-2 title-accent-red" style="font-size: 0.65em;">
                It’s not only about <br> numbers,
                <span style="font-size: 0.65em; margin-left: .35em; opacity: 1,85;">it’s the beauty in problem solving.</span>
              </span>
            </h1>
            
            <!-- Hero Description -->
            <div class="hero-description-enhanced" data-aos="fade-up" data-aos-delay="600">
              <p>Guiding you to master mathematics with clarity, creativity, and rigor.</p>
            </div>

        
            
            <!-- Mathematical Stats -->
            <div class="mathematical-stats-grid" data-aos="fade-up" data-aos-delay="700">
              <div class="stat-card">
                <div class="stat-icon">
                  <i class="fas fa-chalkboard-teacher"></i>
                </div>
                <div class="stat-content">
                  <span class="stat-number">15+</span>
                  <span class="stat-label">Years</span>
                </div>
              </div>
              <div class="stat-card">
                <div class="stat-icon">
                  <i class="fas fa-user-graduate"></i>
                </div>
                <div class="stat-content">
                  <span class="stat-number">500+</span>
                  <span class="stat-label">Students</span>
                </div>
              </div>
              <!-- <div class="stat-card">
                <div class="stat-icon">
                  <i class="fas fa-trophy"></i>
                </div>
                <div class="stat-content">
                  <span class="stat-number">98%</span>
                  <span class="stat-label">Excellence Rate</span>
                </div>
              </div> -->
            </div>
            
            <!-- Horizontal Contact Numbers (Professional) -->
            <div class="hero-contacts d-flex flex-wrap align-items-center gap-3 mt-4" data-aos="fade-up" data-aos-delay="650">
              <a href="tel:+201070798992" aria-label="Call Maadi Center" class="contact-card d-flex align-items-center text-decoration-none p-2 rounded-4" style="background: transparent; backdrop-filter: blur(10px); border: 1px solid rgba(255,255,255,0.3); box-shadow: 0 4px 15px rgba(0,0,0,0.1);">
                <span class="contact-icon d-inline-flex justify-content-center align-items-center me-2 rounded-circle" style="width: 36px; height: 36px; background: var(--red-primary); color: #fff;"><i class="fas fa-phone"></i></span>
                <span class="d-flex flex-column">
                  <strong class="fs-6" style="color: var(--text-primary, #10131a);">+20 1070798992</strong>
                  <small class="opacity-75" style="color: var(--text-secondary, #6c757d); font-size: 0.8rem;">Maadi Center</small>
                </span>
              </a>
              <a href="tel:+201055640148" aria-label="Call Tagmoa Center" class="contact-card d-flex align-items-center text-decoration-none p-2 rounded-4" style="background: transparent; backdrop-filter: blur(10px); border: 1px solid rgba(255,255,255,0.3); box-shadow: 0 4px 15px rgba(0,0,0,0.1);">
                <span class="contact-icon d-inline-flex justify-content-center align-items-center me-2 rounded-circle" style="width: 36px; height: 36px; background: var(--red-primary); color: #fff;"><i class="fas fa-phone"></i></span>
                <span class="d-flex flex-column">
                  <strong class="fs-6" style="color: var(--text-primary, #10131a);">+20 1055640148</strong>
                  <small class="opacity-75" style="color: var(--text-secondary, #6c757d); font-size: 0.8rem;">Tagmoa Center</small>
                </span>
              </a>
              <a href="tel:+201050994880" aria-label="Call Online" class="contact-card d-flex align-items-center text-decoration-none p-2 rounded-4" style="background: transparent; backdrop-filter: blur(10px); border: 1px solid rgba(255,255,255,0.3); box-shadow: 0 4px 15px rgba(0,0,0,0.1);">
                <span class="contact-icon d-inline-flex justify-content-center align-items-center me-2 rounded-circle" style="width: 36px; height: 36px; background: var(--red-primary); color: #fff;"><i class="fas fa-phone"></i></span>
                <span class="d-flex flex-column">
                  <strong class="fs-6" style="color: var(--text-primary, #10131a);">+20 1050994880</strong>
                  <small class="opacity-75" style="color: var(--text-secondary, #6c757d); font-size: 0.8rem;">Online</small>
                </span>
              </a>
            </div>
            
            <!-- Enhanced Call to Action Buttons -->
            <div class="hero-cta-enhanced mt-4" data-aos="fade-up" data-aos-delay="800">
              <a href="/auth/login" class="btn-primary-mathematical">
                <span class="btn-text">Start Learning</span>
                <div class="btn-mathematical-accent">∑</div>
                <div class="btn-glow-wave"></div>
              </a>
              <a href="#methodology" class="btn-secondary-mathematical">
                <i class="fas fa-graduation-cap"></i>
                <span>Our Approach</span>
              </a>
            </div>
          </div>
        </div>
        
        <!-- Right Visual Column -->
        <div class="col-lg-6 col-xl-5">
          <div class="hero-visual-mathematical" data-aos="fade-left" data-aos-delay="300">
            <!-- 3D Mathematical Scene -->
            <div class="mathematical-scene-3d">
              <!-- Geometric Shapes Background -->
              <div class="geometric-shapes-container">
                <div class="geometric-shape shape-dodecahedron"></div>
                <div class="geometric-shape shape-icosahedron"></div>
                <div class="geometric-shape shape-tetrahedron"></div>
              </div>
              
              <!-- Professor Portrait with Glass Effect -->
              <div class="professor-portrait-glass">
                <div class="portrait-glass-frame">
                  <div class="glass-reflection"></div>
                  <div class="mathematical-border">
                    <span class="border-symbol border-symbol-1">∑</span>
                    <span class="border-symbol border-symbol-2">∏</span>
                    <span class="border-symbol border-symbol-3">∫</span>
                    <span class="border-symbol border-symbol-4">∂</span>
                  </div>
                  <img src="/images/test.png" alt="Professor Mathematics" class="professor-image-enhanced">
                </div>
                <div class="portrait-glow-mathematical"></div>
              </div>
              
              <!-- Floating Mathematical Formulas -->
              <div class="floating-formulas-interactive">
                <div class="formula-card formula-1">
                  <span class="formula-label">Calculus</span>
                  <span class="formula-text">∫ f(x)dx</span>
                </div>
                <div class="formula-card formula-2">
                  <span class="formula-label">Algebra</span>
                  <span class="formula-text">x² + y² = r²</span>
                </div>
                <div class="formula-card formula-3">
                  <span class="formula-label">Analysis</span>
                  <span class="formula-text">lim[x→∞] f(x)</span>
                </div>
                <div class="formula-card formula-4">
                  <span class="formula-label">Geometry</span>
                  <span class="formula-text">A = πr²</span>
                </div>
              </div>
              
              <!-- Mathematical Visualization -->
              <div class="mathematical-visualization">
                <div class="function-graph">
                  <svg viewBox="0 0 200 100" class="graph-svg">
                    <path d="M10,90 Q50,10 100,50 T190,30" stroke="var(--red-primary)" stroke-width="2" fill="none" class="function-curve"/>
                    <circle cx="100" cy="50" r="3" fill="var(--red-primary)" class="function-point"/>
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Enhanced Scroll Indicator -->
  <div class="scroll-indicator-mathematical" data-aos="fade-up" data-aos-delay="1000">
    <div class="scroll-text-enhanced">Explore Further</div>
    <div class="scroll-arrow-animated">
      <i class="fas fa-chevron-down"></i>
    </div>
    <div class="scroll-mathematical-accent">∇</div>
  </div>
</section>

<!-- Enhanced Multiplayer Quiz Games Section -->
<section class="free-tests-section scroll-reveal" id="games" data-aos="fade-up">
  <!-- Animated Background Elements -->
  <div class="games-background-elements">
    <div class="floating-crowns">
      <div class="crown crown-1">👑</div>
      <div class="crown crown-2">👑</div>
      <div class="crown crown-3">👑</div>
    </div>
    <div class="floating-game-icons">
      <div class="game-icon icon-1">🎮</div>
      <div class="game-icon icon-2">🏆</div>
      <div class="game-icon icon-3">⚡</div>
      <div class="game-icon icon-4">🎯</div>
    </div>
    <div class="mathematical-particles">
      <div class="particle">∑</div>
      <div class="particle">∇</div>
      <div class="particle">∞</div>
      <div class="particle">π</div>
    </div>
  </div>

  <div class="container">
    <div class="free-tests-header text-center">
      <h2 class="section-title-professor">
        Multiplayer <span class="highlight-red">Quiz Games</span>
      </h2>
      <p class="section-subtitle-professor">
        Challenge other students in real-time competitions with animated crowns and achievements
      </p>
    </div>

    <!-- Enhanced Flip Cards with Crown Theme -->
    <div class="enhanced-flip-cards">
      <div class="flip-card-enhanced">
        <div class="flip-card-inner-enhanced">
          <div class="flip-card-front-enhanced">
            <div class="card-crown-container">
              <div class="card-crown">👑</div>
              <div class="card-glow"></div>
            </div>
            <div class="card-icon-enhanced">
              <i class="fas fa-users"></i>
            </div>
            <h3>Real-time Competition</h3>
            <p>Battle against students worldwide in live multiplayer sessions</p>
            <div class="card-stats">
              <span class="stat"><i class="fas fa-bolt"></i> Live</span>
              <span class="stat"><i class="fas fa-globe"></i> Global</span>
            </div>
            <div class="hover-indicator">
              <i class="fas fa-info-circle"></i>
              <span>Hover for details</span>
            </div>
          </div>
          <div class="flip-card-back-enhanced">
            <div class="back-content-enhanced">
              <div class="back-crown">👑</div>
              <h4>Competitive Features</h4>
              <ul class="feature-list-enhanced">
                <li><i class="fas fa-check"></i> Live multiplayer sessions</li>
                <li><i class="fas fa-check"></i> Real-time scoring system</li>
                <li><i class="fas fa-check"></i> Dynamic leaderboards</li>
                <li><i class="fas fa-check"></i> Instant feedback</li>
                <li><i class="fas fa-check"></i> Global rankings</li>
              </ul>
              <div class="achievement-badge">
                <i class="fas fa-trophy"></i>
                <span>Achievement Unlocked</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="flip-card-enhanced">
        <div class="flip-card-inner-enhanced">
          <div class="flip-card-front-enhanced">
            <div class="card-crown-container">
              <div class="card-crown">👑</div>
              <div class="card-glow"></div>
            </div>
            <div class="card-icon-enhanced">
              <i class="fas fa-trophy"></i>
            </div>
            <h3>Competitive Ranking</h3>
            <p>Climb the leaderboard and earn prestigious crowns</p>
            <div class="card-stats">
              <span class="stat"><i class="fas fa-medal"></i> ELO</span>
              <span class="stat"><i class="fas fa-star"></i> Elite</span>
            </div>
            <div class="hover-indicator">
              <i class="fas fa-info-circle"></i>
              <span>Hover for details</span>
            </div>
          </div>
          <div class="flip-card-back-enhanced">
            <div class="back-content-enhanced">
              <div class="back-crown">👑</div>
              <h4>Ranking System</h4>
              <ul class="feature-list-enhanced">
                <li><i class="fas fa-check"></i> ELO rating system</li>
                <li><i class="fas fa-check"></i> Weekly tournaments</li>
                <li><i class="fas fa-check"></i> Achievement badges</li>
                <li><i class="fas fa-check"></i> Progress tracking</li>
                <li><i class="fas fa-check"></i> Skill-based matching</li>
              </ul>
              <div class="achievement-badge">
                <i class="fas fa-crown"></i>
                <span>Royal Status</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="flip-card-enhanced">
        <div class="flip-card-inner-enhanced">
          <div class="flip-card-front-enhanced">
            <div class="card-crown-container">
              <div class="card-crown">👑</div>
              <div class="card-glow"></div>
            </div>
            <div class="card-icon-enhanced">
              <i class="fas fa-clock"></i>
            </div>
            <h3>Time-based Challenges</h3>
            <p>Master speed rounds and earn time-based crowns</p>
            <div class="card-stats">
              <span class="stat"><i class="fas fa-stopwatch"></i> Speed</span>
              <span class="stat"><i class="fas fa-fire"></i> Intense</span>
            </div>
            <div class="hover-indicator">
              <i class="fas fa-info-circle"></i>
              <span>Hover for details</span>
            </div>
          </div>
          <div class="flip-card-back-enhanced">
            <div class="back-content-enhanced">
              <div class="back-crown">👑</div>
              <h4>Challenge Modes</h4>
              <ul class="feature-list-enhanced">
                <li><i class="fas fa-check"></i> Speed rounds (10s)</li>
                <li><i class="fas fa-check"></i> Standard rounds (30s)</li>
                <li><i class="fas fa-check"></i> Marathon mode (60s)</li>
                <li><i class="fas fa-check"></i> Sudden death</li>
                <li><i class="fas fa-check"></i> Custom timers</li>
              </ul>
              <div class="achievement-badge">
                <i class="fas fa-bolt"></i>
                <span>Speed Master</span>
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>

    <!-- Enhanced CTA with Crown Animation -->
    <div class="games-cta-enhanced">
      <div class="cta-crown-animation">
        <div class="crown-float">👑</div>
        <div class="crown-glow"></div>
      </div>
      <a href="<% if (user) { %>/student/game-rooms<% } else { %>/auth/login<% } %>" class="btn-games-enhanced">
        <div class="btn-crown">👑</div>
        <span class="btn-text">
          <% if (user) { %>Start Playing Games<% } else { %>Login to Play<% } %>
        </span>
        <div class="btn-sparkles">
          <span class="sparkle">✨</span>
          <span class="sparkle">⭐</span>
          <span class="sparkle">💫</span>
        </div>
        <div class="btn-glow-effect"></div>
      </a>
    </div>

    <!-- Game Rooms Preview with Crown Theme -->
    <div class="sample-game-rooms-enhanced">
      <div class="rooms-header">
        <div class="rooms-crown">👑</div>
        <h3>Available Game Rooms</h3>
        <div class="rooms-subtitle">Join the royal competition</div>
      </div>
      <% if (featuredGameRooms && featuredGameRooms.length > 0) { %>
        <div class="rooms-preview-enhanced">
          <% featuredGameRooms.forEach(room => { %>
            <div class="room-preview-card-enhanced" onclick="window.location.href='<% if (user) { %>/student/game-rooms<% } else { %>/auth/login<% } %>'" style="cursor: pointer;">
              <div class="room-crown-badge">👑</div>
              <div class="room-preview-header">
                <h4><%= room.title %></h4>
                <span class="room-status status-<%= room.gameState %>">
                  <% if (room.gameState === 'waiting') { %>
                    <i class="fas fa-clock"></i> Waiting
                  <% } else if (room.gameState === 'playing') { %>
                    <i class="fas fa-play"></i> Playing
                  <% } else { %>
                    <i class="fas fa-circle"></i> <%= room.gameState.charAt(0).toUpperCase() + room.gameState.slice(1) %>
                  <% } %>
                </span>
              </div>
              <div class="room-preview-info">
                <span><i class="fas fa-users"></i> <%= room.currentPlayers ? room.currentPlayers.length : 0 %>/<%= room.maxPlayers || 3 %> players</span>
                <span><i class="fas fa-clock"></i> <%= room.totalTime || (room.timePerQuestion * room.questions.length / 60).toFixed(1) %> min total</span>
                <span><i class="fas fa-question-circle"></i> <%= room.questions ? room.questions.length : 0 %> questions</span>
              </div>
              <div class="room-preview-footer">
                <span class="room-category"><%= room.category || 'General' %></span>
                <span class="room-difficulty difficulty-<%= room.difficulty || 'medium' %>">
                  <%= (room.difficulty || 'medium').charAt(0).toUpperCase() + (room.difficulty || 'medium').slice(1) %>
                </span>
              </div>
              <div class="room-glow-effect"></div>
              <div class="room-hover-overlay">
                <div class="hover-content">
                  <i class="fas fa-gamepad"></i>
                  <span>Click to Join</span>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      <% } else { %>
        <div class="no-game-rooms-enhanced">
          <div class="no-rooms-crown">👑</div>
          <h4>No Game Rooms Available</h4>
          <p>Check back later for new royal multiplayer challenges!</p>
          <% if (user) { %>
            <a href="/student/game-rooms" class="btn btn-primary">
              <i class="fas fa-plus"></i>
              View All Rooms
            </a>
          <% } else { %>
            <a href="/auth/login" class="btn btn-primary">
              <i class="fas fa-sign-in-alt"></i>
              Login to Play
            </a>
          <% } %>
        </div>
      <% } %>
    </div>
  </div>
</section>

<!-- Free Tests Slider Section -->
<section class="free-tests-section scroll-reveal" id="free-tests" data-aos="fade-up">

  <div class="container">
    <div class="free-tests-header text-center">
      <h2 class="section-title-professor">Free <span class="resources-text">Tests</span></h2>
      <p class="section-subtitle-professor">Practice with curated mock tests</p>
    </div>

    <div class="tests-slider" aria-label="Free Tests">
      <button class="tests-arrow tests-arrow-prev" aria-label="Previous">
        <i class="fas fa-chevron-left"></i>
      </button>
      <div class="tests-slides">
        <% if (featuredQuizzes && featuredQuizzes.length > 0) { %>
          <% featuredQuizzes.forEach(quiz => { %>
            <article class="test-card">
              <div class="test-card-media">
                <% if (quiz.thumbnail && quiz.thumbnail.url) { %>
                  <img src="<%= quiz.thumbnail.url %>" alt="<%= quiz.title %>" loading="lazy">
                <% } else { %>
                  <img src="/images/adad.png" alt="<%= quiz.title %>" loading="lazy">
                <% } %>
                <div class="test-card-difficulty <%= quiz.difficulty %>">
                  <%= quiz.difficulty.charAt(0).toUpperCase() + quiz.difficulty.slice(1) %>
                </div>
              </div>
              <div class="test-card-body">
                <div class="test-card-separator"></div>
                <h3 class="test-card-title"><%= quiz.title %></h3>
                <div class="test-card-info">
                  <div class="test-info-item">
                    <i class="fas fa-question-circle"></i>
                    <span><%= quiz.selectedQuestions.length %> Questions</span>
                  </div>
                  <div class="test-info-item">
                    <i class="fas fa-clock"></i>
                    <span><%= quiz.duration %>m</span>
                  </div>
                </div>
                <a href="<% if (user) { %>/student/quiz/<%= quiz._id %>/details<% } else { %>/auth/login<% } %>" class="btn-primary-mathematical test-card-btn">
                  <span><% if (user) { %>Take The Test<% } else { %>Login to Take<% } %></span>
                </a>
              </div>
            </article>
          <% }); %>
        <% } else { %>
          <!-- Fallback static tests if no quizzes available -->
          <article class="test-card">
            <div class="test-card-media">
              <img src="/images/adad.png" alt="ACT Free Mocks" loading="lazy">
            </div>
            <div class="test-card-body">
              <div class="test-card-separator"></div>
              <h3 class="test-card-title">ACT Free Mocks</h3>
              <a href="/auth/login" class="btn-primary-mathematical test-card-btn"><span>Take The Test</span></a>
            </div>
          </article>

          <article class="test-card">
            <div class="test-card-media">
              <img src="/images/adad.png" alt="EST Free Mocks" loading="lazy">
            </div>
            <div class="test-card-body">
              <div class="test-card-separator"></div>
              <h3 class="test-card-title">EST Free Mocks</h3>
              <a href="/auth/login" class="btn-primary-mathematical test-card-btn"><span>Take The Test</span></a>
            </div>
          </article>

          <article class="test-card">
            <div class="test-card-media">
              <img src="/images/adad.png" alt="SAT Free Mocks" loading="lazy">
            </div>
            <div class="test-card-body">
              <div class="test-card-separator"></div>
              <h3 class="test-card-title">SAT Free Mocks</h3>
              <a href="/auth/login" class="btn-primary-mathematical test-card-btn"><span>Take The Test</span></a>
            </div>
          </article>

          <article class="test-card">
            <div class="test-card-media">
              <img src="/images/adad.png" alt="EST2 Free Mocks" loading="lazy">
            </div>
            <div class="test-card-body">
              <div class="test-card-separator"></div>
              <h3 class="test-card-title">EST2 Free Mocks</h3>
              <a href="/auth/login" class="btn-primary-mathematical test-card-btn"><span>Take The Test</span></a>
            </div>
          </article>
        <% } %>
      </div>
      <button class="tests-arrow tests-arrow-next" aria-label="Next">
        <i class="fas fa-chevron-right"></i>
      </button>
    </div>
  </div>
</section>

<script>
  (function(){
    const slider = document.querySelector('#free-tests .tests-slider');
    if (!slider) return;
    const track = slider.querySelector('.tests-slides');
    const prev = slider.querySelector('.tests-arrow-prev');
    const next = slider.querySelector('.tests-arrow-next');
    function getStep(){
      const card = track.querySelector('.test-card');
      return card ? card.getBoundingClientRect().width + 28 : 300;
    }
    prev && prev.addEventListener('click', () => track.scrollBy({ left: -getStep(), behavior: 'smooth' }));
    next && next.addEventListener('click', () => track.scrollBy({ left: getStep(), behavior: 'smooth' }));
  })();
</script>





<!-- Brilliant Students (EST) Section -->
<section class="brilliant-students-new scroll-reveal" id="brilliant-students-est" data-aos="fade-up">
  <div class="container">
    <div class="section-header-new text-center">
      <h2 class="section-title-new">Some of our <span class="highlight-red">Brilliant Students</span> (EST)</h2>
      <p class="section-subtitle-new">Celebrating exceptional achievements in mathematics</p>
    </div>

    <div class="students-slider-new" aria-label="Brilliant EST Students">
      <button class="slider-arrow slider-arrow-prev" aria-label="Previous">
        <i class="fas fa-chevron-left"></i>
      </button>
      <div class="students-slides-new">
        <% if (brilliantStudents && brilliantStudents.est && brilliantStudents.est.length > 0) { %>
          <% brilliantStudents.est.forEach(student => { %>
            <article class="student-card-new">
              <div class="student-photo-new">
                <% if (student.image) { %>
                  <img src="<%= student.image %>" alt="<%= student.name %>" loading="lazy" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                <% } %>
                <div class="fallback-shape-new" style="<%= student.image ? 'display: none;' : '' %>"><%= student.fallbackInitials %></div>
              </div>
              <div class="student-content-new">
                <div class="student-badge-new">
                  <span class="test-type"><%= student.testTypeDisplayName %></span>
                </div>
                <h3 class="student-name-new"><%= student.name %></h3>
                <div class="test-score-container">
                  <div class="test-score-header">
                    <span class="test-score-value est-score-value"><%= student.score %></span>
                    <span class="test-score-max">/ <%= student.maxScore %></span>
                  </div>
                  <div class="test-progress-wrapper">
                    <div class="test-progress-bar">
                      <div class="test-progress-fill est-progress-fill" style="width: <%= student.percentage %>%"></div>
                    </div>
                  </div>
                  <div class="test-progress-label">
                    <span class="test-percentage est-percentage"><%= student.percentage %>%</span>
                  </div>
                </div>
              </div>
            </article>
          <% }); %>
        <% } else { %>
          <!-- Fallback static EST students if no data available -->
          <article class="student-card-new">
            <div class="student-photo-new">
              <img src="/images/test.png" alt="Jana Hossam" loading="lazy" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
              <div class="fallback-shape-new" style="display: none;">JH</div>
            </div>
            <div class="student-content-new">
              <div class="student-badge-new">
                <span class="test-type">Egyptian Scholastic Test</span>
              </div>
              <h3 class="student-name-new">Jana Hossam</h3>
              <div class="test-score-container">
                <div class="test-score-header">
                  <span class="test-score-value est-score-value">800</span>
                  <span class="test-score-max">/ 800</span>
                </div>
                <div class="test-progress-wrapper">
                  <div class="test-progress-bar">
                    <div class="test-progress-fill est-progress-fill" style="width: 100%"></div>
                  </div>
                </div>
                <div class="test-progress-label">
                  <span class="test-percentage est-percentage">100%</span>
                </div>
              </div>
            </div>
          </article>
        <% } %>
      </div>
      <button class="slider-arrow slider-arrow-next" aria-label="Next">
        <i class="fas fa-chevron-right"></i>
      </button>
    </div>
    
    <!-- Pagination Dots -->
    <div class="slider-pagination" id="pagination-est">
      <button class="pagination-dot active" data-slide="0"></button>
      <button class="pagination-dot" data-slide="1"></button>
      <button class="pagination-dot" data-slide="2"></button>
      <button class="pagination-dot" data-slide="3"></button>
    </div>
  </div>
</section>

<!-- Brilliant Students (DSAT) Section -->
<section class="brilliant-students-new" id="brilliant-students-dsat">
  <div class="container">
    <div class="section-header-new text-center">
      <h2 class="section-title-new">Some of our <span class="highlight-red">Brilliant Students</span> (DSAT)</h2>
      <p class="section-subtitle-new">Outstanding performance in Digital SAT examinations</p>
    </div>

    <div class="students-slider-new" aria-label="Brilliant DSAT Students">
      <button class="slider-arrow slider-arrow-prev" aria-label="Previous">
        <i class="fas fa-chevron-left"></i>
      </button>
      <div class="students-slides-new">
        <% if (brilliantStudents && brilliantStudents.dsat && brilliantStudents.dsat.length > 0) { %>
          <% brilliantStudents.dsat.forEach(student => { %>
            <article class="student-card-new">
              <div class="student-photo-new">
                <% if (student.image) { %>
                  <img src="<%= student.image %>" alt="<%= student.name %>" loading="lazy" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                <% } %>
                <div class="fallback-shape-new" style="<%= student.image ? 'display: none;' : '' %>"><%= student.fallbackInitials %></div>
              </div>
              <div class="student-content-new">
                <div class="student-badge-new">
                  <span class="test-type"><%= student.testTypeDisplayName %></span>
                </div>
                <h3 class="student-name-new"><%= student.name %></h3>
                <div class="test-score-container">
                  <div class="test-score-header">
                    <span class="test-score-value dsat-score-value"><%= student.score %></span>
                    <span class="test-score-max">/ <%= student.maxScore %></span>
                  </div>
                  <div class="test-progress-wrapper">
                    <div class="test-progress-bar">
                      <div class="test-progress-fill dsat-progress-fill" style="width: <%= student.percentage %>%"></div>
                    </div>
                  </div>
                  <div class="test-progress-label">
                    <span class="test-percentage dsat-percentage"><%= student.percentage %>%</span>
                  </div>
                </div>
              </div>
            </article>
          <% }); %>
        <% } else { %>
          <!-- Fallback static DSAT students if no data available -->
          <article class="student-card-new">
            <div class="student-photo-new">
              <img src="/images/test.png" alt="Alex Johnson" loading="lazy" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
              <div class="fallback-shape-new" style="display: none;">AJ</div>
            </div>
            <div class="student-content-new">
              <div class="student-badge-new">
                <span class="test-type">Digital SAT</span>
              </div>
              <h3 class="student-name-new">Alex Johnson</h3>
              <div class="test-score-container">
                <div class="test-score-header">
                  <span class="test-score-value dsat-score-value">1600</span>
                  <span class="test-score-max">/ 1600</span>
                </div>
                <div class="test-progress-wrapper">
                  <div class="test-progress-bar">
                    <div class="test-progress-fill dsat-progress-fill" style="width: 100%"></div>
                  </div>
                </div>
                <div class="test-progress-label">
                  <span class="test-percentage dsat-percentage">100%</span>
                </div>
              </div>
            </div>
          </article>
        <% } %>
      </div>
      <button class="slider-arrow slider-arrow-next" aria-label="Next">
        <i class="fas fa-chevron-right"></i>
      </button>
    </div>
    
    <!-- Pagination Dots -->
    <div class="slider-pagination" id="pagination-dsat">
      <button class="pagination-dot active" data-slide="0"></button>
      <button class="pagination-dot" data-slide="1"></button>
      <button class="pagination-dot" data-slide="2"></button>
      <button class="pagination-dot" data-slide="3"></button>
    </div>
  </div>
</section>

<!-- Brilliant Students (ACT) Section -->
<section class="brilliant-students-new" id="brilliant-students-act">
  <div class="container">
    <div class="section-header-new text-center">
      <h2 class="section-title-new">Some of our <span class="highlight-red">Brilliant Students</span> (ACT)</h2>
      <p class="section-subtitle-new">Exceptional achievements in ACT mathematics</p>
    </div>

    <div class="students-slider-new" aria-label="Brilliant ACT Students">
      <button class="slider-arrow slider-arrow-prev" aria-label="Previous">
        <i class="fas fa-chevron-left"></i>
      </button>
      <div class="students-slides-new">
        <% if (brilliantStudents && brilliantStudents.act && brilliantStudents.act.length > 0) { %>
          <% brilliantStudents.act.forEach(student => { %>
            <article class="student-card-new">
              <div class="student-photo-new">
                <% if (student.image) { %>
                  <img src="<%= student.image %>" alt="<%= student.name %>" loading="lazy" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                <% } %>
                <div class="fallback-shape-new" style="<%= student.image ? 'display: none;' : '' %>"><%= student.fallbackInitials %></div>
              </div>
              <div class="student-content-new">
                <div class="student-badge-new">
                  <span class="test-type"><%= student.testTypeDisplayName %></span>
                </div>
                <h3 class="student-name-new"><%= student.name %></h3>
                <div class="test-score-container">
                  <div class="test-score-header">
                    <span class="test-score-value act-score-value"><%= student.score %></span>
                    <span class="test-score-max">/ <%= student.maxScore %></span>
                  </div>
                  <div class="test-progress-wrapper">
                    <div class="test-progress-bar">
                      <div class="test-progress-fill act-progress-fill" style="width: <%= student.percentage %>%"></div>
                    </div>
                  </div>
                  <div class="test-progress-label">
                    <span class="test-percentage act-percentage"><%= student.percentage %>%</span>
                  </div>
                </div>
              </div>
            </article>
          <% }); %>
        <% } else { %>
          <!-- Fallback static ACT students if no data available -->
          <article class="student-card-new">
            <div class="student-photo-new">
              <img src="/images/test.png" alt="Michael Brown" loading="lazy" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
              <div class="fallback-shape-new" style="display: none;">MB</div>
            </div>
            <div class="student-content-new">
              <div class="student-badge-new">
                <span class="test-type">American College Test</span>
              </div>
              <h3 class="student-name-new">Michael Brown</h3>
              <div class="test-score-container">
                <div class="test-score-header">
                  <span class="test-score-value act-score-value">36</span>
                  <span class="test-score-max">/ 36</span>
                </div>
                <div class="test-progress-wrapper">
                  <div class="test-progress-bar">
                    <div class="test-progress-fill act-progress-fill" style="width: 100%"></div>
                  </div>
                </div>
                <div class="test-progress-label">
                  <span class="test-percentage act-percentage">100%</span>
                </div>
              </div>
            </div>
          </article>
        <% } %>
      </div>
      <button class="slider-arrow slider-arrow-next" aria-label="Next">
        <i class="fas fa-chevron-right"></i>
      </button>
    </div>
    
    <!-- Pagination Dots -->
    <div class="slider-pagination" id="pagination-act">
      <button class="pagination-dot active" data-slide="0"></button>
      <button class="pagination-dot" data-slide="1"></button>
      <button class="pagination-dot" data-slide="2"></button>
      <button class="pagination-dot" data-slide="3"></button>
    </div>
  </div>
</section>

<script>
// Brilliant Students Slider Functionality
document.addEventListener('DOMContentLoaded', function() {
  const sliders = document.querySelectorAll('.students-slider-new');
  
  sliders.forEach(slider => {
    const slides = slider.querySelector('.students-slides-new');
    const prevBtn = slider.querySelector('.slider-arrow-prev');
    const nextBtn = slider.querySelector('.slider-arrow-next');
    
    if (!slides || !prevBtn || !nextBtn) return;
    
    let currentIndex = 0;
    const cards = slides.querySelectorAll('.student-card-new');
    const totalCards = cards.length;
    
    // Get the pagination container for this slider
    const sliderId = slider.closest('.brilliant-students-new').id;
    const pagination = document.getElementById(`pagination-${sliderId.split('-').pop()}`);
    
    function updateSlider() {
      const cardWidth = cards[0].offsetWidth + 20; // card width + gap
      const maxIndex = Math.max(0, totalCards - 3); // Show 3 cards at once, so max slide is totalCards - 3
      const clampedIndex = Math.min(currentIndex, maxIndex);
      
      if (currentIndex !== clampedIndex) {
        currentIndex = clampedIndex;
      }
      
      const translateX = -currentIndex * cardWidth;
      slides.style.transform = `translateX(${translateX}px)`;
      
      // Update arrow states
      prevBtn.style.opacity = currentIndex === 0 ? '0.5' : '1';
      prevBtn.disabled = currentIndex === 0;
      nextBtn.style.opacity = currentIndex >= maxIndex ? '0.5' : '1';
      nextBtn.disabled = currentIndex >= maxIndex;
      
      // Update pagination dots
      if (pagination) {
        const dots = pagination.querySelectorAll('.pagination-dot');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === currentIndex);
        });
      }
    }
    
    prevBtn.addEventListener('click', () => {
      if (currentIndex > 0) {
        currentIndex--;
        updateSlider();
      }
    });
    
    nextBtn.addEventListener('click', () => {
      const maxIndex = Math.max(0, totalCards - 3);
      if (currentIndex < maxIndex) {
        currentIndex++;
        updateSlider();
      }
    });
    
    // Pagination dot clicks
    if (pagination) {
      const dots = pagination.querySelectorAll('.pagination-dot');
      dots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
          currentIndex = index;
          updateSlider();
        });
      });
    }
    
    // Initialize
    updateSlider();
    
    // Handle window resize
    window.addEventListener('resize', updateSlider);
  });
});
</script>

<!-- Courses Section -->
<section class="courses-section scroll-reveal" id="courses" data-aos="fade-up" style="padding: 80px 0;">
  <div class="container">
    <div class="section-header-new text-center">
      <h2 class="section-title-new">Our <span class="highlight-red">Courses</span></h2>
      <p class="section-subtitle-new">Choose your preferred learning method</p>
    </div>

    <div class="courses-navigation-grid">
      <!-- Online Courses Card -->
      <article class="course-type-card" data-aos="fade-right" data-aos-delay="200">
        <div class="course-type-card-background">
          <div class="course-type-pattern">
            <div class="pattern-element">∫</div>
            <div class="pattern-element">∑</div>
            <div class="pattern-element">∂</div>
          </div>
        </div>
        <div class="course-type-icon">
          <i class="fas fa-laptop-code"></i>
          <div class="icon-glow"></div>
        </div>
        <div class="course-type-content">
          <h3 class="course-type-title">Online Courses</h3>
          <p class="course-type-description">
            Learn at your own pace with our comprehensive online courses. 
            Access video lectures, practice problems, and interactive content from anywhere.
          </p>
          <div class="course-type-features">
            <div class="feature-item">
              <i class="fas fa-play-circle"></i>
              <span>Video Lectures</span>
            </div>
            <div class="feature-item">
              <i class="fas fa-clock"></i>
              <span>Self-Paced</span>
            </div>
            <div class="feature-item">
              <i class="fas fa-mobile-alt"></i>
              <span>Mobile Access</span>
            </div>
          </div>
          <div class="course-type-stats">
            <div class="stat-item">
              <span class="stat-number"><%= stats.onlineBundles %></span>
              <span class="stat-label">Bundles</span>
            </div>
            <div class="stat-item">
              <span class="stat-number"><%= stats.totalStudents %></span>
              <span class="stat-label">Students</span>
            </div>
          </div>
        </div>
        <div class="course-type-action">
          <a href="/courses/online" class="btn-course-type">
            <span>Explore Online Courses</span>
            <i class="fas fa-arrow-right"></i>
            <div class="btn-wave"></div>
          </a>
        </div>
      </article>

      <!-- On-Ground Courses Card -->
      <article class="course-type-card" data-aos="fade-left" data-aos-delay="400">
        <div class="course-type-card-background">
          <div class="course-type-pattern">
            <div class="pattern-element">∇</div>
            <div class="pattern-element">∏</div>
            <div class="pattern-element">∞</div>
          </div>
        </div>
        <div class="course-type-icon">
          <i class="fas fa-chalkboard-teacher"></i>
          <div class="icon-glow"></div>
        </div>
        <div class="course-type-content">
          <h3 class="course-type-title">On-Ground Courses</h3>
          <p class="course-type-description">
            Experience face-to-face learning with our expert instructors. 
            Interactive sessions, hands-on practice, and personalized attention.
          </p>
          <div class="course-type-features">
            <div class="feature-item">
              <i class="fas fa-users"></i>
              <span>Small Groups</span>
            </div>
            <div class="feature-item">
              <i class="fas fa-hand-paper"></i>
              <span>Hands-on</span>
            </div>
            <div class="feature-item">
              <i class="fas fa-chalkboard"></i>
              <span>Interactive</span>
            </div>
          </div>
          <div class="course-type-stats">
            <div class="stat-item">
              <span class="stat-number"><%= stats.ongroundBundles %></span>
              <span class="stat-label">Bundles</span>
            </div>
            <div class="stat-item">
              <span class="stat-number"><%= stats.totalStudents %></span>
              <span class="stat-label">Students</span>
            </div>
          </div>
        </div>
        <div class="course-type-action">
          <a href="/courses/onground" class="btn-course-type">
            <span>Explore On-Ground Courses</span>
            <i class="fas fa-arrow-right"></i>
            <div class="btn-wave"></div>
          </a>
        </div>
      </article>
    </div>
  </div>
</section>

<script>
// Course Type Card Interactions
document.addEventListener('DOMContentLoaded', function() {
  const courseTypeCards = document.querySelectorAll('.course-type-card');
  
  courseTypeCards.forEach(card => {
    // Add hover effects
    card.addEventListener('mouseenter', function() {
      this.style.transform = 'translateY(-10px)';
      this.style.transition = 'all 0.3s ease';
    });
    
    card.addEventListener('mouseleave', function() {
      this.style.transform = 'translateY(0)';
    });
    
    // Add click animation
    card.addEventListener('click', function(e) {
      if (e.target.closest('.btn-course-type')) return; // Don't animate if clicking the button
      
      const link = this.querySelector('.btn-course-type');
      if (link) {
        link.click();
      }
    });
  });
});
</script>


<!-- Elkably Team Section -->
<section class="elkably-team-section" id="elkably-team" data-aos="fade-up">
  <div class="container">
    <div class="team-content-wrapper">
      <!-- Left Side - Text Content -->
      <div class="team-text-content">
        <h2 class="team-title">
          <span class="team-title-red">Elkably</span> Team
        </h2>
        <p class="team-description">
          Each one of us was just like you, an American Diploma student. So you can always depend on us giving you the best assistance!
        </p>
        <button class="team-learn-more-btn">
          Learn More
          <i class="fas fa-arrow-right"></i>
        </button>
      </div>

      <!-- Right Side - Team Member Carousel -->
      <div class="team-carousel-container">
        <div class="team-carousel">
          <!-- Carousel Navigation Arrows -->
          <button class="team-carousel-prev" id="teamCarouselPrev">
            <i class="fas fa-chevron-left"></i>
          </button>
          <button class="team-carousel-next" id="teamCarouselNext">
            <i class="fas fa-chevron-right"></i>
          </button>

          <!-- Team Member Card -->
          <div class="team-member-card">
            <div class="team-card-header">
              <h3 class="team-card-title">ELKABLY TEAM</h3>
            </div>
            
            <div class="team-member-info">
              <div class="team-member-image">
                <img src="/images/adad.png" alt="Nusayba Elshamy" id="teamMemberImage">
              </div>
              
              <div class="team-member-details">
                <div class="team-member-role">
                  <div class="role-line"></div>
                  <div class="role-text">
                    <span class="role-field" id="teamMemberField">Architecture</span>
                    <span class="role-experience" id="teamMemberExperience">8 years of experience</span>
                  </div>
                </div>
                
                <h4 class="team-member-name" id="teamMemberName">Nusayba Elshamy</h4>
                <p class="team-member-position" id="teamMemberPosition">HEAD</p>
              </div>
            </div>

          </div>
        </div>

        <!-- Carousel Indicators -->
        <div class="team-carousel-indicators">
          <span class="indicator active" data-index="0"></span>
          <span class="indicator" data-index="1"></span>
          <span class="indicator" data-index="2"></span>
          <span class="indicator" data-index="3"></span>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Score Calculator Section -->
<section class="score-calculator-section" id="score-calculator" data-aos="fade-up">
  <div class="container">
    <div class="calculator-header">
      <h2 class="calculator-title">
        <span class="calculator-title-icon">
          <i class="fas fa-calculator"></i>
        </span>
        Score Calculator
      </h2>
      <p class="calculator-subtitle">Calculate your university admission score with precision</p>
    </div>

    <div class="calculator-container">
      <div class="calculator-card">
        <!-- Calculator Form -->
        <div class="calculator-form">
          <!-- University Type Dropdown -->
          <div class="form-group">
            <label for="universityType" class="form-label">Select a Choice</label>
            <div class="dropdown-wrapper">
              <select id="universityType" class="university-dropdown">
                <option value="government">جامعة حكومية</option>
                <option value="private">جامعة خاصة</option>
                <option value="ahlia">جامعة أهلية</option>
              </select>
              <i class="fas fa-chevron-down dropdown-icon"></i>
            </div>
          </div>

          <!-- EST1 Score -->
          <div class="form-group">
            <label for="est1Score" class="form-label">EST1 Score<span class="required">*</span></label>
            <input type="number" id="est1Score" class="form-input" placeholder="Enter your EST1 score" min="0" max="1600">
            <div class="input-hint">Out of 1600</div>
            <div class="min-requirement" id="est1MinReq">الحد الأدنى للقبول هو 1050</div>
          </div>

          <!-- EST2 Score -->
          <div class="form-group">
            <label for="est2Score" class="form-label">EST2 Score (leave empty if unavailable)</label>
            <input type="number" id="est2Score" class="form-input" placeholder="Enter your EST2 score" min="0" max="1600">
            <div class="input-hint">Out of 1600</div>
            <div class="min-requirement" id="est2MinReq">الحد الأدنى للقبول هو 1100</div>
          </div>

          <!-- GPA Score -->
          <div class="form-group">
            <label for="gpaScore" class="form-label">GPA Score<span class="required">*</span></label>
            <input type="number" id="gpaScore" class="form-input" placeholder="Enter your GPA" min="0" max="40" step="0.01">
            <div class="input-hint">Out of 4</div>
            <div class="gpa-note">Divide by 10 if out of 40</div>
          </div>

          <!-- Calculated Value Display -->
          <div class="form-group">
            <label class="form-label">Calculated Value</label>
            <div class="calculated-display" id="calculatedValue">0</div>
          </div>
        </div>
      </div>

      <!-- Rules Panel -->
      <div class="rules-panel">
        <h3 class="rules-title">Rules</h3>
        
        <div class="rules-content" id="rulesContent">
          <div class="rule-section">
            <h4 class="rule-title">
              <i class="fas fa-caret-down"></i>
              Government Universities
            </h4>
            <ul class="rule-list">
              <li>– Your EST 1 score should not be less than 1050.</li>
              <li>– For adding EST 2 score, you should not get less than 1100.</li>
              <li>– If the score is above 1090, a 9% bonus is added to your EST 1 score.</li>
            </ul>
          </div>

          <div class="rule-section">
            <h4 class="rule-title">
              <i class="fas fa-caret-down"></i>
              Private Universities
            </h4>
            <ul class="rule-list">
              <li>– Your EST 1 score should not be less than 800.</li>
              <li>– For adding EST 2 score, you should not get less than 900.</li>
              <li>– If the score is above 1090, a 15% bonus is added to your EST 1 score.</li>
            </ul>
          </div>

          <div class="rule-section">
            <h4 class="rule-title">
              <i class="fas fa-caret-down"></i>
              Ahlia Universities
            </h4>
            <ul class="rule-list">
              <li>– Your EST 1 score should not be less than 800.</li>
              <li>– For adding EST 2 score, you should not get less than 900.</li>
              <li>– If the score is above 1090, a 15% bonus is added to your EST 1 score.</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
</script>





<!-- Shopping Cart Sidebar -->
<div class="cart-sidebar" id="cartSidebar">
  <div class="cart-sidebar-overlay" id="cartSidebarOverlay"></div>
  <div class="cart-sidebar-content">
    <div class="cart-sidebar-header">
      <h3 class="cart-sidebar-title">
        <i class="fas fa-shopping-cart"></i>
        Shopping Cart
      </h3>
      <button class="cart-sidebar-close" id="cartSidebarClose">
        <i class="fas fa-times"></i>
      </button>
    </div>
    
    <div class="cart-sidebar-body">
      <div class="cart-items" id="cartItems">
        <div class="cart-empty">
          <div class="cart-empty-icon">
            <i class="fas fa-shopping-cart"></i>
          </div>
          <h4>Your cart is empty</h4>
          <p>Add some courses to get started!</p>
        </div>
      </div>
    </div>
    
    <div class="cart-sidebar-footer">
      <div class="cart-total" id="cartTotal">
        <div class="cart-total-row">
          <span>Subtotal:</span>
          <span class="cart-subtotal">$0.00</span>
        </div>
        <div class="cart-total-row">
          <span>Tax:</span>
          <span class="cart-tax">$0.00</span>
        </div>
        <div class="cart-total-row cart-total-final">
          <span>Total:</span>
          <span class="cart-total-amount">$0.00</span>
        </div>
      </div>
      
      <div class="cart-actions">
        <button class="btn-cart-checkout" id="cartCheckout" disabled>
          <i class="fas fa-credit-card"></i>
          Proceed to Checkout
        </button>
        <button class="btn-cart-continue" id="cartContinue">
          Continue Shopping
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Import index-specific CSS -->
<link rel="stylesheet" href="/css/index.css">
<link rel="stylesheet" href="/css/course-cards.css">


<!-- Shopping Cart Functionality -->
<script>
// Cart Management System
let cart = [];
let cartTotal = 0;

// Initialize cart from localStorage
function initCart() {
  const savedCart = localStorage.getItem('cart');
  if (savedCart) {
    cart = JSON.parse(savedCart);
    updateCartDisplay();
  }
}

// Add item to cart
function addToCart(item) {
  // Check if user is logged in
  <% if (!user) { %>
    showCartNotification('Please login to add items to cart', 'error');
    setTimeout(() => {
      window.location.href = '/auth/login';
    }, 2000);
    return;
  <% } %>
  
  // Add to cart via API
  fetch('/purchase/cart/add', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      itemId: item.id,
      itemType: item.type || 'course',
      title: item.title,
      price: item.price,
      image: item.image
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      showCartNotification(data.message, 'success');
      
      // Update global cart count and refresh cart data
      if (window.globalCart) {
        window.globalCart.refreshCartData();
      }
      
      // Show cart sidebar
      showCartSidebar();
    } else {
      showCartNotification(data.message, 'error');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showCartNotification('Error adding item to cart', 'error');
  });
}

// Remove item from cart
function removeFromCart(itemId) {
  // Find the item in the session cart to get its type
  const item = window.sessionCart ? window.sessionCart.find(cartItem => cartItem.id === itemId) : null;
  if (!item) return;
  
  fetch('/purchase/cart/remove', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      itemId: itemId,
      itemType: item.type
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      showCartNotification('Item removed from cart', 'success');
      
      // Update global cart count and refresh cart data
      if (window.globalCart) {
        window.globalCart.refreshCartData();
      }
    } else {
      showCartNotification(data.message, 'error');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showCartNotification('Error removing item from cart', 'error');
  });
}

// Update item quantity
function updateQuantity(itemId, newQuantity) {
  const item = cart.find(item => item.id === itemId);
  if (item) {
    if (newQuantity <= 0) {
      removeFromCart(itemId);
    } else {
      item.quantity = newQuantity;
      localStorage.setItem('cart', JSON.stringify(cart));
      updateCartDisplay();
    }
  }
}

// Update cart display
function updateCartDisplay() {
  updateCartCount();
  updateCartItems();
  updateCartTotal();
}

// Update cart count in header
function updateCartCount() {
  const cartCount = document.getElementById('cartCount');
  const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
  cartCount.textContent = totalItems;
  
  // Add animation class
  cartCount.classList.add('cart-count-updated');
  setTimeout(() => cartCount.classList.remove('cart-count-updated'), 300);
}

// Update cart items in sidebar
function updateCartItems() {
  const cartItems = document.getElementById('cartItems');
  
  if (cart.length === 0) {
    cartItems.innerHTML = `
      <div class="cart-empty">
        <div class="cart-empty-icon">
          <i class="fas fa-shopping-cart"></i>
        </div>
        <h4>Your cart is empty</h4>
        <p>Add some courses to get started!</p>
      </div>
    `;
    return;
  }
  
  cartItems.innerHTML = cart.map(item => `
    <div class="cart-item" data-id="${item.id}">
      <div class="cart-item-image">
        <img src="${item.image}" alt="${item.title}">
      </div>
      <div class="cart-item-details">
        <h5 class="cart-item-title">${item.title}</h5>
        <div class="cart-item-price">$${item.price.toFixed(2)}</div>
        <div class="cart-item-controls">
          <button class="cart-quantity-btn" onclick="updateQuantity(${item.id}, ${item.quantity - 1})">-</button>
          <span class="cart-quantity">${item.quantity}</span>
          <button class="cart-quantity-btn" onclick="updateQuantity(${item.id}, ${item.quantity + 1})">+</button>
        </div>
      </div>
      <div class="cart-item-actions">
        <button class="cart-remove-btn" onclick="removeFromCart(${item.id})" title="Remove item">
          <i class="fas fa-trash"></i>
        </button>
      </div>
    </div>
  `).join('');
}

// Update cart total
function updateCartTotal() {
  const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
  const tax = subtotal * 0.1; // 10% tax
  const total = subtotal + tax;
  
  document.querySelector('.cart-subtotal').textContent = `$${subtotal.toFixed(2)}`;
  document.querySelector('.cart-tax').textContent = `$${tax.toFixed(2)}`;
  document.querySelector('.cart-total-amount').textContent = `$${total.toFixed(2)}`;
  
  // Enable/disable checkout button
  const checkoutBtn = document.getElementById('cartCheckout');
  checkoutBtn.disabled = cart.length === 0;
}

// Show cart sidebar
function showCartSidebar() {
  const cartSidebar = document.getElementById('cartSidebar');
  cartSidebar.classList.add('cart-sidebar-open');
  document.body.classList.add('cart-sidebar-active');
}

// Hide cart sidebar
function hideCartSidebar() {
  const cartSidebar = document.getElementById('cartSidebar');
  cartSidebar.classList.remove('cart-sidebar-open');
  document.body.classList.remove('cart-sidebar-active');
}

// Show cart notification
function showCartNotification(message) {
  // Create notification element
  const notification = document.createElement('div');
  notification.className = 'cart-notification';
  notification.innerHTML = `
    <div class="cart-notification-content">
      <i class="fas fa-check-circle"></i>
      <span>${message}</span>
    </div>
  `;
  
  document.body.appendChild(notification);
  
  // Show notification
  setTimeout(() => notification.classList.add('show'), 100);
  
  // Hide notification
  setTimeout(() => {
    notification.classList.remove('show');
    setTimeout(() => notification.remove(), 300);
  }, 1400);
}

// Cart sidebar event listeners
document.addEventListener('DOMContentLoaded', function() {
  // Initialize cart
  initCart();
  
  // Cart toggle button
  const cartToggle = document.getElementById('cartToggle');
  const cartSidebar = document.getElementById('cartSidebar');
  const cartSidebarClose = document.getElementById('cartSidebarClose');
  const cartSidebarOverlay = document.getElementById('cartSidebarOverlay');
  const cartContinue = document.getElementById('cartContinue');
  const cartCheckout = document.getElementById('cartCheckout');
  
  // Open cart sidebar
  cartToggle.addEventListener('click', showCartSidebar);
  
  // Close cart sidebar
  cartSidebarClose.addEventListener('click', hideCartSidebar);
  cartSidebarOverlay.addEventListener('click', hideCartSidebar);
  cartContinue.addEventListener('click', hideCartSidebar);
  
  // Checkout button
  cartCheckout.addEventListener('click', function() {
    if (cart.length > 0) {
      // Here you would integrate with your payment system
      alert('Checkout functionality would be implemented here!');
    }
  });
  
  // Close cart on escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && cartSidebar.classList.contains('cart-sidebar-open')) {
      hideCartSidebar();
    }
  });
});

// Elkably Team Carousel Functionality
document.addEventListener('DOMContentLoaded', function() {
  // Team member data
  const teamMembers = [
    {
      name: "Nusayba Elshamy",
      position: "HEAD",
      field: "Architecture",
      experience: "8 years of experience",
      image: "/images/team-member-1.jpg"
    },
    {
      name: "Ahmed Hassan",
      position: "CO-FOUNDER",
      field: "Mathematics",
      experience: "10 years of experience",
      image: "/images/team-member-2.jpg"
    },
    {
      name: "Fatima Ali",
      position: "LEAD INSTRUCTOR",
      field: "Physics",
      experience: "6 years of experience",
      image: "/images/team-member-3.jpg"
    },
    {
      name: "Omar Mahmoud",
      position: "TECHNICAL DIRECTOR",
      field: "Computer Science",
      experience: "7 years of experience",
      image: "/images/team-member-4.jpg"
    }
  ];

  let currentMemberIndex = 0;
  const totalMembers = teamMembers.length;

  // Get DOM elements
  const teamMemberImage = document.getElementById('teamMemberImage');
  const teamMemberName = document.getElementById('teamMemberName');
  const teamMemberPosition = document.getElementById('teamMemberPosition');
  const teamMemberField = document.getElementById('teamMemberField');
  const teamMemberExperience = document.getElementById('teamMemberExperience');
  const prevBtn = document.getElementById('teamCarouselPrev');
  const nextBtn = document.getElementById('teamCarouselNext');
  const indicators = document.querySelectorAll('.team-carousel-indicators .indicator');

  // Function to update team member display with sliding animation
  function updateTeamMember(index, direction = 'right') {
    const member = teamMembers[index];
    const card = document.querySelector('.team-member-card');
    
    // Remove any existing animation classes
    card.classList.remove('slide-in-left', 'slide-in-right', 'slide-out-left', 'slide-out-right');
    
    // Add slide out animation
    const slideOutClass = direction === 'right' ? 'slide-out-left' : 'slide-out-right';
    card.classList.add(slideOutClass);
    
    setTimeout(() => {
      // Update content
      teamMemberImage.src = member.image;
      teamMemberImage.alt = member.name;
      teamMemberName.textContent = member.name;
      teamMemberPosition.textContent = member.position;
      teamMemberField.textContent = member.field;
      teamMemberExperience.textContent = member.experience;
      
      // Remove slide out class and add slide in animation
      card.classList.remove(slideOutClass);
      const slideInClass = direction === 'right' ? 'slide-in-right' : 'slide-in-left';
      card.classList.add(slideInClass);
      
      // Clean up animation classes after animation completes
      setTimeout(() => {
        card.classList.remove(slideInClass);
      }, 600);
    }, 400);
  }

  // Function to update indicators
  function updateIndicators(index) {
    indicators.forEach((indicator, i) => {
      indicator.classList.toggle('active', i === index);
    });
  }

  // Function to go to next member
  function nextMember() {
    currentMemberIndex = (currentMemberIndex + 1) % totalMembers;
    updateTeamMember(currentMemberIndex, 'right');
    updateIndicators(currentMemberIndex);
  }

  // Function to go to previous member
  function prevMember() {
    currentMemberIndex = (currentMemberIndex - 1 + totalMembers) % totalMembers;
    updateTeamMember(currentMemberIndex, 'left');
    updateIndicators(currentMemberIndex);
  }

  // Event listeners for navigation buttons
  if (nextBtn) {
    nextBtn.addEventListener('click', nextMember);
  }
  
  if (prevBtn) {
    prevBtn.addEventListener('click', prevMember);
  }

  // Event listeners for indicators
  indicators.forEach((indicator, index) => {
    indicator.addEventListener('click', () => {
      const direction = index > currentMemberIndex ? 'right' : 'left';
      currentMemberIndex = index;
      updateTeamMember(currentMemberIndex, direction);
      updateIndicators(currentMemberIndex);
    });
  });

  // Auto-play functionality (optional)
  let autoPlayInterval;
  
  function startAutoPlay() {
    autoPlayInterval = setInterval(nextMember, 5000); // Change every 5 seconds
  }
  
  function stopAutoPlay() {
    clearInterval(autoPlayInterval);
  }

  // Start auto-play
  startAutoPlay();

  // Pause auto-play on hover
  const carouselContainer = document.querySelector('.team-carousel-container');
  if (carouselContainer) {
    carouselContainer.addEventListener('mouseenter', stopAutoPlay);
    carouselContainer.addEventListener('mouseleave', startAutoPlay);
  }

  // Keyboard navigation
  document.addEventListener('keydown', function(e) {
    if (e.key === 'ArrowLeft') {
      prevMember();
    } else if (e.key === 'ArrowRight') {
      nextMember();
    }
  });

  // Initialize with first member
  updateTeamMember(0, 'right');
  updateIndicators(0);
});

// Score Calculator Functionality
document.addEventListener('DOMContentLoaded', function() {
  // University type configurations
  const universityTypes = {
    government: {
      name: 'Government Universities',
      est1Min: 1050,
      est2Min: 1100,
      bonusThreshold: 1090,
      bonusPercentage: 9
    },
    private: {
      name: 'Private Universities',
      est1Min: 800,
      est2Min: 900,
      bonusThreshold: 1090,
      bonusPercentage: 15
    },
    ahlia: {
      name: 'Ahlia Universities',
      est1Min: 800,
      est2Min: 900,
      bonusThreshold: 1090,
      bonusPercentage: 15
    }
  };

  // Get DOM elements
  const universityDropdown = document.getElementById('universityType');
  const est1Input = document.getElementById('est1Score');
  const est2Input = document.getElementById('est2Score');
  const gpaInput = document.getElementById('gpaScore');
  const calculatedValue = document.getElementById('calculatedValue');
  const est1MinReq = document.getElementById('est1MinReq');
  const est2MinReq = document.getElementById('est2MinReq');
  const ruleSections = document.querySelectorAll('.rule-section');

  let selectedUniversityType = 'government';

  // Initialize calculator
  function initCalculator() {
    updateUniversityType();
    setupRuleToggles();
  }

  // Update university type
  function updateUniversityType() {
    selectedUniversityType = universityDropdown.value;
    const config = universityTypes[selectedUniversityType];
    
    // Update minimum requirements
    est1MinReq.textContent = `الحد الأدنى للقبول هو ${config.est1Min}`;
    est2MinReq.textContent = `الحد الأدنى للقبول هو ${config.est2Min}`;
    
    // Clear and recalculate
    clearResults();
    calculateScore();
  }

  // Setup rule section toggles
  function setupRuleToggles() {
    ruleSections.forEach(section => {
      const title = section.querySelector('.rule-title');
      title.addEventListener('click', () => {
        section.classList.toggle('expanded');
      });
    });
  }

  // Clear results
  function clearResults() {
    calculatedValue.textContent = '0';
  }

  // Validate inputs
  function validateInputs() {
    const est1Score = parseFloat(est1Input.value) || 0;
    const est2Score = parseFloat(est2Input.value) || 0;
    const gpaScore = parseFloat(gpaInput.value) || 0;
    const config = universityTypes[selectedUniversityType];
    
    let isValid = true;
    
    // Remove previous error states
    [est1Input, est2Input, gpaInput].forEach(input => {
      input.classList.remove('error');
    });
    
    // Validate EST1
    if (est1Score > 0 && est1Score < config.est1Min) {
      est1Input.classList.add('error');
      isValid = false;
    }
    
    // Validate EST2 if provided
    if (est2Score > 0 && est2Score < config.est2Min) {
      est2Input.classList.add('error');
      isValid = false;
    }
    
    // Validate GPA
    if (gpaScore > 0 && (gpaScore <= 0 || gpaScore > 40)) {
      gpaInput.classList.add('error');
      isValid = false;
    }
    
    return isValid;
  }

  // Calculate score
  function calculateScore() {
    const est1Score = parseFloat(est1Input.value) || 0;
    const est2Score = parseFloat(est2Input.value) || 0;
    let gpaScore = parseFloat(gpaInput.value) || 0;
    const config = universityTypes[selectedUniversityType];
    
    // Don't calculate if no valid inputs
    if (est1Score === 0 && gpaScore === 0) {
      calculatedValue.textContent = '0';
      return;
    }
    
    // Convert GPA if out of 40
    if (gpaScore > 4) {
      gpaScore = gpaScore / 10;
    }
    
    // Calculate bonus
    let bonusPercentage = 0;
    if (est2Score > config.bonusThreshold) {
      bonusPercentage = config.bonusPercentage;
    }
    
    // Apply bonus to EST1
    const est1WithBonus = est1Score * (1 + bonusPercentage / 100);
    
    // Calculate total score
    const totalScore = est1WithBonus + est2Score + (gpaScore * 100);
    
    // Update calculated value
    calculatedValue.textContent = Math.round(totalScore);
    
    // Validate and show error state if needed
    if (!validateInputs()) {
      calculatedValue.style.color = '#e74c3c';
    } else {
      calculatedValue.style.color = '#2c3e50';
    }
  }

  // Event listeners
  universityDropdown.addEventListener('change', updateUniversityType);

  // Real-time calculation
  [est1Input, est2Input, gpaInput].forEach(input => {
    input.addEventListener('input', () => {
      // Remove error state on input
      input.classList.remove('error');
      
      // Calculate score
      calculateScore();
    });
  });

  // Initialize calculator
  initCalculator();
});
</script>

<!-- Import index-specific JavaScript -->
<script src="/js/index.js"></script>
<script src="/js/student-photos-slider.js"></script>
<script src="/js/enhanced-scroll-effects.js"></script>

<!-- Enhanced Games Section Styles moved to style.css -->



<%- include('partials/footer') %>